# Generated with generate_ssl_tests.pl

num_tests = 363

test-0 = 0-version-negotiation
test-1 = 1-version-negotiation
test-2 = 2-version-negotiation
test-3 = 3-version-negotiation
test-4 = 4-version-negotiation
test-5 = 5-version-negotiation
test-6 = 6-version-negotiation
test-7 = 7-version-negotiation
test-8 = 8-version-negotiation
test-9 = 9-version-negotiation
test-10 = 10-version-negotiation
test-11 = 11-version-negotiation
test-12 = 12-version-negotiation
test-13 = 13-version-negotiation
test-14 = 14-version-negotiation
test-15 = 15-version-negotiation
test-16 = 16-version-negotiation
test-17 = 17-version-negotiation
test-18 = 18-version-negotiation
test-19 = 19-version-negotiation
test-20 = 20-version-negotiation
test-21 = 21-version-negotiation
test-22 = 22-version-negotiation
test-23 = 23-version-negotiation
test-24 = 24-version-negotiation
test-25 = 25-version-negotiation
test-26 = 26-version-negotiation
test-27 = 27-version-negotiation
test-28 = 28-version-negotiation
test-29 = 29-version-negotiation
test-30 = 30-version-negotiation
test-31 = 31-version-negotiation
test-32 = 32-version-negotiation
test-33 = 33-version-negotiation
test-34 = 34-version-negotiation
test-35 = 35-version-negotiation
test-36 = 36-version-negotiation
test-37 = 37-version-negotiation
test-38 = 38-version-negotiation
test-39 = 39-version-negotiation
test-40 = 40-version-negotiation
test-41 = 41-version-negotiation
test-42 = 42-version-negotiation
test-43 = 43-version-negotiation
test-44 = 44-version-negotiation
test-45 = 45-version-negotiation
test-46 = 46-version-negotiation
test-47 = 47-version-negotiation
test-48 = 48-version-negotiation
test-49 = 49-version-negotiation
test-50 = 50-version-negotiation
test-51 = 51-version-negotiation
test-52 = 52-version-negotiation
test-53 = 53-version-negotiation
test-54 = 54-version-negotiation
test-55 = 55-version-negotiation
test-56 = 56-version-negotiation
test-57 = 57-version-negotiation
test-58 = 58-version-negotiation
test-59 = 59-version-negotiation
test-60 = 60-version-negotiation
test-61 = 61-version-negotiation
test-62 = 62-version-negotiation
test-63 = 63-version-negotiation
test-64 = 64-version-negotiation
test-65 = 65-version-negotiation
test-66 = 66-version-negotiation
test-67 = 67-version-negotiation
test-68 = 68-version-negotiation
test-69 = 69-version-negotiation
test-70 = 70-version-negotiation
test-71 = 71-version-negotiation
test-72 = 72-version-negotiation
test-73 = 73-version-negotiation
test-74 = 74-version-negotiation
test-75 = 75-version-negotiation
test-76 = 76-version-negotiation
test-77 = 77-version-negotiation
test-78 = 78-version-negotiation
test-79 = 79-version-negotiation
test-80 = 80-version-negotiation
test-81 = 81-version-negotiation
test-82 = 82-version-negotiation
test-83 = 83-version-negotiation
test-84 = 84-version-negotiation
test-85 = 85-version-negotiation
test-86 = 86-version-negotiation
test-87 = 87-version-negotiation
test-88 = 88-version-negotiation
test-89 = 89-version-negotiation
test-90 = 90-version-negotiation
test-91 = 91-version-negotiation
test-92 = 92-version-negotiation
test-93 = 93-version-negotiation
test-94 = 94-version-negotiation
test-95 = 95-version-negotiation
test-96 = 96-version-negotiation
test-97 = 97-version-negotiation
test-98 = 98-version-negotiation
test-99 = 99-version-negotiation
test-100 = 100-version-negotiation
test-101 = 101-version-negotiation
test-102 = 102-version-negotiation
test-103 = 103-version-negotiation
test-104 = 104-version-negotiation
test-105 = 105-version-negotiation
test-106 = 106-version-negotiation
test-107 = 107-version-negotiation
test-108 = 108-version-negotiation
test-109 = 109-version-negotiation
test-110 = 110-version-negotiation
test-111 = 111-version-negotiation
test-112 = 112-version-negotiation
test-113 = 113-version-negotiation
test-114 = 114-version-negotiation
test-115 = 115-version-negotiation
test-116 = 116-version-negotiation
test-117 = 117-version-negotiation
test-118 = 118-version-negotiation
test-119 = 119-version-negotiation
test-120 = 120-version-negotiation
test-121 = 121-version-negotiation
test-122 = 122-version-negotiation
test-123 = 123-version-negotiation
test-124 = 124-version-negotiation
test-125 = 125-version-negotiation
test-126 = 126-version-negotiation
test-127 = 127-version-negotiation
test-128 = 128-version-negotiation
test-129 = 129-version-negotiation
test-130 = 130-version-negotiation
test-131 = 131-version-negotiation
test-132 = 132-version-negotiation
test-133 = 133-version-negotiation
test-134 = 134-version-negotiation
test-135 = 135-version-negotiation
test-136 = 136-version-negotiation
test-137 = 137-version-negotiation
test-138 = 138-version-negotiation
test-139 = 139-version-negotiation
test-140 = 140-version-negotiation
test-141 = 141-version-negotiation
test-142 = 142-version-negotiation
test-143 = 143-version-negotiation
test-144 = 144-version-negotiation
test-145 = 145-version-negotiation
test-146 = 146-version-negotiation
test-147 = 147-version-negotiation
test-148 = 148-version-negotiation
test-149 = 149-version-negotiation
test-150 = 150-version-negotiation
test-151 = 151-version-negotiation
test-152 = 152-version-negotiation
test-153 = 153-version-negotiation
test-154 = 154-version-negotiation
test-155 = 155-version-negotiation
test-156 = 156-version-negotiation
test-157 = 157-version-negotiation
test-158 = 158-version-negotiation
test-159 = 159-version-negotiation
test-160 = 160-version-negotiation
test-161 = 161-version-negotiation
test-162 = 162-version-negotiation
test-163 = 163-version-negotiation
test-164 = 164-version-negotiation
test-165 = 165-version-negotiation
test-166 = 166-version-negotiation
test-167 = 167-version-negotiation
test-168 = 168-version-negotiation
test-169 = 169-version-negotiation
test-170 = 170-version-negotiation
test-171 = 171-version-negotiation
test-172 = 172-version-negotiation
test-173 = 173-version-negotiation
test-174 = 174-version-negotiation
test-175 = 175-version-negotiation
test-176 = 176-version-negotiation
test-177 = 177-version-negotiation
test-178 = 178-version-negotiation
test-179 = 179-version-negotiation
test-180 = 180-version-negotiation
test-181 = 181-version-negotiation
test-182 = 182-version-negotiation
test-183 = 183-version-negotiation
test-184 = 184-version-negotiation
test-185 = 185-version-negotiation
test-186 = 186-version-negotiation
test-187 = 187-version-negotiation
test-188 = 188-version-negotiation
test-189 = 189-version-negotiation
test-190 = 190-version-negotiation
test-191 = 191-version-negotiation
test-192 = 192-version-negotiation
test-193 = 193-version-negotiation
test-194 = 194-version-negotiation
test-195 = 195-version-negotiation
test-196 = 196-version-negotiation
test-197 = 197-version-negotiation
test-198 = 198-version-negotiation
test-199 = 199-version-negotiation
test-200 = 200-version-negotiation
test-201 = 201-version-negotiation
test-202 = 202-version-negotiation
test-203 = 203-version-negotiation
test-204 = 204-version-negotiation
test-205 = 205-version-negotiation
test-206 = 206-version-negotiation
test-207 = 207-version-negotiation
test-208 = 208-version-negotiation
test-209 = 209-version-negotiation
test-210 = 210-version-negotiation
test-211 = 211-version-negotiation
test-212 = 212-version-negotiation
test-213 = 213-version-negotiation
test-214 = 214-version-negotiation
test-215 = 215-version-negotiation
test-216 = 216-version-negotiation
test-217 = 217-version-negotiation
test-218 = 218-version-negotiation
test-219 = 219-version-negotiation
test-220 = 220-version-negotiation
test-221 = 221-version-negotiation
test-222 = 222-version-negotiation
test-223 = 223-version-negotiation
test-224 = 224-version-negotiation
test-225 = 225-version-negotiation
test-226 = 226-version-negotiation
test-227 = 227-version-negotiation
test-228 = 228-version-negotiation
test-229 = 229-version-negotiation
test-230 = 230-version-negotiation
test-231 = 231-version-negotiation
test-232 = 232-version-negotiation
test-233 = 233-version-negotiation
test-234 = 234-version-negotiation
test-235 = 235-version-negotiation
test-236 = 236-version-negotiation
test-237 = 237-version-negotiation
test-238 = 238-version-negotiation
test-239 = 239-version-negotiation
test-240 = 240-version-negotiation
test-241 = 241-version-negotiation
test-242 = 242-version-negotiation
test-243 = 243-version-negotiation
test-244 = 244-version-negotiation
test-245 = 245-version-negotiation
test-246 = 246-version-negotiation
test-247 = 247-version-negotiation
test-248 = 248-version-negotiation
test-249 = 249-version-negotiation
test-250 = 250-version-negotiation
test-251 = 251-version-negotiation
test-252 = 252-version-negotiation
test-253 = 253-version-negotiation
test-254 = 254-version-negotiation
test-255 = 255-version-negotiation
test-256 = 256-version-negotiation
test-257 = 257-version-negotiation
test-258 = 258-version-negotiation
test-259 = 259-version-negotiation
test-260 = 260-version-negotiation
test-261 = 261-version-negotiation
test-262 = 262-version-negotiation
test-263 = 263-version-negotiation
test-264 = 264-version-negotiation
test-265 = 265-version-negotiation
test-266 = 266-version-negotiation
test-267 = 267-version-negotiation
test-268 = 268-version-negotiation
test-269 = 269-version-negotiation
test-270 = 270-version-negotiation
test-271 = 271-version-negotiation
test-272 = 272-version-negotiation
test-273 = 273-version-negotiation
test-274 = 274-version-negotiation
test-275 = 275-version-negotiation
test-276 = 276-version-negotiation
test-277 = 277-version-negotiation
test-278 = 278-version-negotiation
test-279 = 279-version-negotiation
test-280 = 280-version-negotiation
test-281 = 281-version-negotiation
test-282 = 282-version-negotiation
test-283 = 283-version-negotiation
test-284 = 284-version-negotiation
test-285 = 285-version-negotiation
test-286 = 286-version-negotiation
test-287 = 287-version-negotiation
test-288 = 288-version-negotiation
test-289 = 289-version-negotiation
test-290 = 290-version-negotiation
test-291 = 291-version-negotiation
test-292 = 292-version-negotiation
test-293 = 293-version-negotiation
test-294 = 294-version-negotiation
test-295 = 295-version-negotiation
test-296 = 296-version-negotiation
test-297 = 297-version-negotiation
test-298 = 298-version-negotiation
test-299 = 299-version-negotiation
test-300 = 300-version-negotiation
test-301 = 301-version-negotiation
test-302 = 302-version-negotiation
test-303 = 303-version-negotiation
test-304 = 304-version-negotiation
test-305 = 305-version-negotiation
test-306 = 306-version-negotiation
test-307 = 307-version-negotiation
test-308 = 308-version-negotiation
test-309 = 309-version-negotiation
test-310 = 310-version-negotiation
test-311 = 311-version-negotiation
test-312 = 312-version-negotiation
test-313 = 313-version-negotiation
test-314 = 314-version-negotiation
test-315 = 315-version-negotiation
test-316 = 316-version-negotiation
test-317 = 317-version-negotiation
test-318 = 318-version-negotiation
test-319 = 319-version-negotiation
test-320 = 320-version-negotiation
test-321 = 321-version-negotiation
test-322 = 322-version-negotiation
test-323 = 323-version-negotiation
test-324 = 324-version-negotiation
test-325 = 325-version-negotiation
test-326 = 326-version-negotiation
test-327 = 327-version-negotiation
test-328 = 328-version-negotiation
test-329 = 329-version-negotiation
test-330 = 330-version-negotiation
test-331 = 331-version-negotiation
test-332 = 332-version-negotiation
test-333 = 333-version-negotiation
test-334 = 334-version-negotiation
test-335 = 335-version-negotiation
test-336 = 336-version-negotiation
test-337 = 337-version-negotiation
test-338 = 338-version-negotiation
test-339 = 339-version-negotiation
test-340 = 340-version-negotiation
test-341 = 341-version-negotiation
test-342 = 342-version-negotiation
test-343 = 343-version-negotiation
test-344 = 344-version-negotiation
test-345 = 345-version-negotiation
test-346 = 346-version-negotiation
test-347 = 347-version-negotiation
test-348 = 348-version-negotiation
test-349 = 349-version-negotiation
test-350 = 350-version-negotiation
test-351 = 351-version-negotiation
test-352 = 352-version-negotiation
test-353 = 353-version-negotiation
test-354 = 354-version-negotiation
test-355 = 355-version-negotiation
test-356 = 356-version-negotiation
test-357 = 357-version-negotiation
test-358 = 358-version-negotiation
test-359 = 359-version-negotiation
test-360 = 360-version-negotiation
test-361 = 361-ciphersuite-sanity-check-client
test-362 = 362-ciphersuite-sanity-check-server
# ===========================================================

[0-version-negotiation]
ssl_conf = 0-version-negotiation-ssl

[0-version-negotiation-ssl]
server = 0-version-negotiation-server
client = 0-version-negotiation-client

[0-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[0-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-0]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[1-version-negotiation]
ssl_conf = 1-version-negotiation-ssl

[1-version-negotiation-ssl]
server = 1-version-negotiation-server
client = 1-version-negotiation-client

[1-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[1-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-1]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[2-version-negotiation]
ssl_conf = 2-version-negotiation-ssl

[2-version-negotiation-ssl]
server = 2-version-negotiation-server
client = 2-version-negotiation-client

[2-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[2-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-2]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[3-version-negotiation]
ssl_conf = 3-version-negotiation-ssl

[3-version-negotiation-ssl]
server = 3-version-negotiation-server
client = 3-version-negotiation-client

[3-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[3-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-3]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[4-version-negotiation]
ssl_conf = 4-version-negotiation-ssl

[4-version-negotiation-ssl]
server = 4-version-negotiation-server
client = 4-version-negotiation-client

[4-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[4-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-4]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[5-version-negotiation]
ssl_conf = 5-version-negotiation-ssl

[5-version-negotiation-ssl]
server = 5-version-negotiation-server
client = 5-version-negotiation-client

[5-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[5-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-5]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[6-version-negotiation]
ssl_conf = 6-version-negotiation-ssl

[6-version-negotiation-ssl]
server = 6-version-negotiation-server
client = 6-version-negotiation-client

[6-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[6-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-6]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[7-version-negotiation]
ssl_conf = 7-version-negotiation-ssl

[7-version-negotiation-ssl]
server = 7-version-negotiation-server
client = 7-version-negotiation-client

[7-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[7-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-7]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[8-version-negotiation]
ssl_conf = 8-version-negotiation-ssl

[8-version-negotiation-ssl]
server = 8-version-negotiation-server
client = 8-version-negotiation-client

[8-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[8-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-8]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[9-version-negotiation]
ssl_conf = 9-version-negotiation-ssl

[9-version-negotiation-ssl]
server = 9-version-negotiation-server
client = 9-version-negotiation-client

[9-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[9-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-9]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[10-version-negotiation]
ssl_conf = 10-version-negotiation-ssl

[10-version-negotiation-ssl]
server = 10-version-negotiation-server
client = 10-version-negotiation-client

[10-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[10-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-10]
ExpectedResult = ServerFail


# ===========================================================

[11-version-negotiation]
ssl_conf = 11-version-negotiation-ssl

[11-version-negotiation-ssl]
server = 11-version-negotiation-server
client = 11-version-negotiation-client

[11-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[11-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-11]
ExpectedResult = ServerFail


# ===========================================================

[12-version-negotiation]
ssl_conf = 12-version-negotiation-ssl

[12-version-negotiation-ssl]
server = 12-version-negotiation-server
client = 12-version-negotiation-client

[12-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[12-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-12]
ExpectedResult = ServerFail


# ===========================================================

[13-version-negotiation]
ssl_conf = 13-version-negotiation-ssl

[13-version-negotiation-ssl]
server = 13-version-negotiation-server
client = 13-version-negotiation-client

[13-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[13-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-13]
ExpectedResult = ServerFail


# ===========================================================

[14-version-negotiation]
ssl_conf = 14-version-negotiation-ssl

[14-version-negotiation-ssl]
server = 14-version-negotiation-server
client = 14-version-negotiation-client

[14-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[14-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-14]
ExpectedResult = ServerFail


# ===========================================================

[15-version-negotiation]
ssl_conf = 15-version-negotiation-ssl

[15-version-negotiation-ssl]
server = 15-version-negotiation-server
client = 15-version-negotiation-client

[15-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[15-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-15]
ExpectedResult = ServerFail


# ===========================================================

[16-version-negotiation]
ssl_conf = 16-version-negotiation-ssl

[16-version-negotiation-ssl]
server = 16-version-negotiation-server
client = 16-version-negotiation-client

[16-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[16-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-16]
ExpectedResult = ServerFail


# ===========================================================

[17-version-negotiation]
ssl_conf = 17-version-negotiation-ssl

[17-version-negotiation-ssl]
server = 17-version-negotiation-server
client = 17-version-negotiation-client

[17-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[17-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-17]
ExpectedResult = ServerFail


# ===========================================================

[18-version-negotiation]
ssl_conf = 18-version-negotiation-ssl

[18-version-negotiation-ssl]
server = 18-version-negotiation-server
client = 18-version-negotiation-client

[18-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[18-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-18]
ExpectedResult = ServerFail


# ===========================================================

[19-version-negotiation]
ssl_conf = 19-version-negotiation-ssl

[19-version-negotiation-ssl]
server = 19-version-negotiation-server
client = 19-version-negotiation-client

[19-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[19-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-19]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[20-version-negotiation]
ssl_conf = 20-version-negotiation-ssl

[20-version-negotiation-ssl]
server = 20-version-negotiation-server
client = 20-version-negotiation-client

[20-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[20-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-20]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[21-version-negotiation]
ssl_conf = 21-version-negotiation-ssl

[21-version-negotiation-ssl]
server = 21-version-negotiation-server
client = 21-version-negotiation-client

[21-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[21-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-21]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[22-version-negotiation]
ssl_conf = 22-version-negotiation-ssl

[22-version-negotiation-ssl]
server = 22-version-negotiation-server
client = 22-version-negotiation-client

[22-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[22-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-22]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[23-version-negotiation]
ssl_conf = 23-version-negotiation-ssl

[23-version-negotiation-ssl]
server = 23-version-negotiation-server
client = 23-version-negotiation-client

[23-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[23-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-23]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[24-version-negotiation]
ssl_conf = 24-version-negotiation-ssl

[24-version-negotiation-ssl]
server = 24-version-negotiation-server
client = 24-version-negotiation-client

[24-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[24-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-24]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[25-version-negotiation]
ssl_conf = 25-version-negotiation-ssl

[25-version-negotiation-ssl]
server = 25-version-negotiation-server
client = 25-version-negotiation-client

[25-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[25-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-25]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[26-version-negotiation]
ssl_conf = 26-version-negotiation-ssl

[26-version-negotiation-ssl]
server = 26-version-negotiation-server
client = 26-version-negotiation-client

[26-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[26-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-26]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[27-version-negotiation]
ssl_conf = 27-version-negotiation-ssl

[27-version-negotiation-ssl]
server = 27-version-negotiation-server
client = 27-version-negotiation-client

[27-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[27-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-27]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[28-version-negotiation]
ssl_conf = 28-version-negotiation-ssl

[28-version-negotiation-ssl]
server = 28-version-negotiation-server
client = 28-version-negotiation-client

[28-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[28-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-28]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[29-version-negotiation]
ssl_conf = 29-version-negotiation-ssl

[29-version-negotiation-ssl]
server = 29-version-negotiation-server
client = 29-version-negotiation-client

[29-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[29-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-29]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[30-version-negotiation]
ssl_conf = 30-version-negotiation-ssl

[30-version-negotiation-ssl]
server = 30-version-negotiation-server
client = 30-version-negotiation-client

[30-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[30-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-30]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[31-version-negotiation]
ssl_conf = 31-version-negotiation-ssl

[31-version-negotiation-ssl]
server = 31-version-negotiation-server
client = 31-version-negotiation-client

[31-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[31-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-31]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[32-version-negotiation]
ssl_conf = 32-version-negotiation-ssl

[32-version-negotiation-ssl]
server = 32-version-negotiation-server
client = 32-version-negotiation-client

[32-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[32-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-32]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[33-version-negotiation]
ssl_conf = 33-version-negotiation-ssl

[33-version-negotiation-ssl]
server = 33-version-negotiation-server
client = 33-version-negotiation-client

[33-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[33-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-33]
ExpectedResult = ServerFail


# ===========================================================

[34-version-negotiation]
ssl_conf = 34-version-negotiation-ssl

[34-version-negotiation-ssl]
server = 34-version-negotiation-server
client = 34-version-negotiation-client

[34-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[34-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-34]
ExpectedResult = ServerFail


# ===========================================================

[35-version-negotiation]
ssl_conf = 35-version-negotiation-ssl

[35-version-negotiation-ssl]
server = 35-version-negotiation-server
client = 35-version-negotiation-client

[35-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[35-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-35]
ExpectedResult = ServerFail


# ===========================================================

[36-version-negotiation]
ssl_conf = 36-version-negotiation-ssl

[36-version-negotiation-ssl]
server = 36-version-negotiation-server
client = 36-version-negotiation-client

[36-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[36-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-36]
ExpectedResult = ServerFail


# ===========================================================

[37-version-negotiation]
ssl_conf = 37-version-negotiation-ssl

[37-version-negotiation-ssl]
server = 37-version-negotiation-server
client = 37-version-negotiation-client

[37-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[37-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-37]
ExpectedResult = ServerFail


# ===========================================================

[38-version-negotiation]
ssl_conf = 38-version-negotiation-ssl

[38-version-negotiation-ssl]
server = 38-version-negotiation-server
client = 38-version-negotiation-client

[38-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[38-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-38]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[39-version-negotiation]
ssl_conf = 39-version-negotiation-ssl

[39-version-negotiation-ssl]
server = 39-version-negotiation-server
client = 39-version-negotiation-client

[39-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[39-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-39]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[40-version-negotiation]
ssl_conf = 40-version-negotiation-ssl

[40-version-negotiation-ssl]
server = 40-version-negotiation-server
client = 40-version-negotiation-client

[40-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[40-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-40]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[41-version-negotiation]
ssl_conf = 41-version-negotiation-ssl

[41-version-negotiation-ssl]
server = 41-version-negotiation-server
client = 41-version-negotiation-client

[41-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[41-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-41]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[42-version-negotiation]
ssl_conf = 42-version-negotiation-ssl

[42-version-negotiation-ssl]
server = 42-version-negotiation-server
client = 42-version-negotiation-client

[42-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[42-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-42]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[43-version-negotiation]
ssl_conf = 43-version-negotiation-ssl

[43-version-negotiation-ssl]
server = 43-version-negotiation-server
client = 43-version-negotiation-client

[43-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[43-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-43]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[44-version-negotiation]
ssl_conf = 44-version-negotiation-ssl

[44-version-negotiation-ssl]
server = 44-version-negotiation-server
client = 44-version-negotiation-client

[44-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[44-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-44]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[45-version-negotiation]
ssl_conf = 45-version-negotiation-ssl

[45-version-negotiation-ssl]
server = 45-version-negotiation-server
client = 45-version-negotiation-client

[45-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[45-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-45]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[46-version-negotiation]
ssl_conf = 46-version-negotiation-ssl

[46-version-negotiation-ssl]
server = 46-version-negotiation-server
client = 46-version-negotiation-client

[46-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[46-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-46]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[47-version-negotiation]
ssl_conf = 47-version-negotiation-ssl

[47-version-negotiation-ssl]
server = 47-version-negotiation-server
client = 47-version-negotiation-client

[47-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[47-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-47]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[48-version-negotiation]
ssl_conf = 48-version-negotiation-ssl

[48-version-negotiation-ssl]
server = 48-version-negotiation-server
client = 48-version-negotiation-client

[48-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[48-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-48]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[49-version-negotiation]
ssl_conf = 49-version-negotiation-ssl

[49-version-negotiation-ssl]
server = 49-version-negotiation-server
client = 49-version-negotiation-client

[49-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[49-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-49]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[50-version-negotiation]
ssl_conf = 50-version-negotiation-ssl

[50-version-negotiation-ssl]
server = 50-version-negotiation-server
client = 50-version-negotiation-client

[50-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[50-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-50]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[51-version-negotiation]
ssl_conf = 51-version-negotiation-ssl

[51-version-negotiation-ssl]
server = 51-version-negotiation-server
client = 51-version-negotiation-client

[51-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[51-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-51]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[52-version-negotiation]
ssl_conf = 52-version-negotiation-ssl

[52-version-negotiation-ssl]
server = 52-version-negotiation-server
client = 52-version-negotiation-client

[52-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[52-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-52]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[53-version-negotiation]
ssl_conf = 53-version-negotiation-ssl

[53-version-negotiation-ssl]
server = 53-version-negotiation-server
client = 53-version-negotiation-client

[53-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[53-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-53]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[54-version-negotiation]
ssl_conf = 54-version-negotiation-ssl

[54-version-negotiation-ssl]
server = 54-version-negotiation-server
client = 54-version-negotiation-client

[54-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[54-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-54]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[55-version-negotiation]
ssl_conf = 55-version-negotiation-ssl

[55-version-negotiation-ssl]
server = 55-version-negotiation-server
client = 55-version-negotiation-client

[55-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[55-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-55]
ExpectedResult = ServerFail


# ===========================================================

[56-version-negotiation]
ssl_conf = 56-version-negotiation-ssl

[56-version-negotiation-ssl]
server = 56-version-negotiation-server
client = 56-version-negotiation-client

[56-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[56-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-56]
ExpectedResult = ServerFail


# ===========================================================

[57-version-negotiation]
ssl_conf = 57-version-negotiation-ssl

[57-version-negotiation-ssl]
server = 57-version-negotiation-server
client = 57-version-negotiation-client

[57-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[57-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-57]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[58-version-negotiation]
ssl_conf = 58-version-negotiation-ssl

[58-version-negotiation-ssl]
server = 58-version-negotiation-server
client = 58-version-negotiation-client

[58-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[58-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-58]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[59-version-negotiation]
ssl_conf = 59-version-negotiation-ssl

[59-version-negotiation-ssl]
server = 59-version-negotiation-server
client = 59-version-negotiation-client

[59-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[59-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-59]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[60-version-negotiation]
ssl_conf = 60-version-negotiation-ssl

[60-version-negotiation-ssl]
server = 60-version-negotiation-server
client = 60-version-negotiation-client

[60-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[60-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-60]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[61-version-negotiation]
ssl_conf = 61-version-negotiation-ssl

[61-version-negotiation-ssl]
server = 61-version-negotiation-server
client = 61-version-negotiation-client

[61-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[61-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-61]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[62-version-negotiation]
ssl_conf = 62-version-negotiation-ssl

[62-version-negotiation-ssl]
server = 62-version-negotiation-server
client = 62-version-negotiation-client

[62-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[62-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-62]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[63-version-negotiation]
ssl_conf = 63-version-negotiation-ssl

[63-version-negotiation-ssl]
server = 63-version-negotiation-server
client = 63-version-negotiation-client

[63-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[63-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-63]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[64-version-negotiation]
ssl_conf = 64-version-negotiation-ssl

[64-version-negotiation-ssl]
server = 64-version-negotiation-server
client = 64-version-negotiation-client

[64-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[64-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-64]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[65-version-negotiation]
ssl_conf = 65-version-negotiation-ssl

[65-version-negotiation-ssl]
server = 65-version-negotiation-server
client = 65-version-negotiation-client

[65-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[65-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-65]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[66-version-negotiation]
ssl_conf = 66-version-negotiation-ssl

[66-version-negotiation-ssl]
server = 66-version-negotiation-server
client = 66-version-negotiation-client

[66-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[66-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-66]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[67-version-negotiation]
ssl_conf = 67-version-negotiation-ssl

[67-version-negotiation-ssl]
server = 67-version-negotiation-server
client = 67-version-negotiation-client

[67-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[67-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-67]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[68-version-negotiation]
ssl_conf = 68-version-negotiation-ssl

[68-version-negotiation-ssl]
server = 68-version-negotiation-server
client = 68-version-negotiation-client

[68-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[68-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-68]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[69-version-negotiation]
ssl_conf = 69-version-negotiation-ssl

[69-version-negotiation-ssl]
server = 69-version-negotiation-server
client = 69-version-negotiation-client

[69-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[69-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-69]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[70-version-negotiation]
ssl_conf = 70-version-negotiation-ssl

[70-version-negotiation-ssl]
server = 70-version-negotiation-server
client = 70-version-negotiation-client

[70-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[70-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-70]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[71-version-negotiation]
ssl_conf = 71-version-negotiation-ssl

[71-version-negotiation-ssl]
server = 71-version-negotiation-server
client = 71-version-negotiation-client

[71-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[71-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-71]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[72-version-negotiation]
ssl_conf = 72-version-negotiation-ssl

[72-version-negotiation-ssl]
server = 72-version-negotiation-server
client = 72-version-negotiation-client

[72-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[72-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-72]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[73-version-negotiation]
ssl_conf = 73-version-negotiation-ssl

[73-version-negotiation-ssl]
server = 73-version-negotiation-server
client = 73-version-negotiation-client

[73-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[73-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-73]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[74-version-negotiation]
ssl_conf = 74-version-negotiation-ssl

[74-version-negotiation-ssl]
server = 74-version-negotiation-server
client = 74-version-negotiation-client

[74-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[74-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-74]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[75-version-negotiation]
ssl_conf = 75-version-negotiation-ssl

[75-version-negotiation-ssl]
server = 75-version-negotiation-server
client = 75-version-negotiation-client

[75-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[75-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-75]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[76-version-negotiation]
ssl_conf = 76-version-negotiation-ssl

[76-version-negotiation-ssl]
server = 76-version-negotiation-server
client = 76-version-negotiation-client

[76-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[76-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-76]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[77-version-negotiation]
ssl_conf = 77-version-negotiation-ssl

[77-version-negotiation-ssl]
server = 77-version-negotiation-server
client = 77-version-negotiation-client

[77-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[77-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-77]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[78-version-negotiation]
ssl_conf = 78-version-negotiation-ssl

[78-version-negotiation-ssl]
server = 78-version-negotiation-server
client = 78-version-negotiation-client

[78-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[78-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-78]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[79-version-negotiation]
ssl_conf = 79-version-negotiation-ssl

[79-version-negotiation-ssl]
server = 79-version-negotiation-server
client = 79-version-negotiation-client

[79-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[79-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-79]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[80-version-negotiation]
ssl_conf = 80-version-negotiation-ssl

[80-version-negotiation-ssl]
server = 80-version-negotiation-server
client = 80-version-negotiation-client

[80-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[80-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-80]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[81-version-negotiation]
ssl_conf = 81-version-negotiation-ssl

[81-version-negotiation-ssl]
server = 81-version-negotiation-server
client = 81-version-negotiation-client

[81-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[81-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-81]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[82-version-negotiation]
ssl_conf = 82-version-negotiation-ssl

[82-version-negotiation-ssl]
server = 82-version-negotiation-server
client = 82-version-negotiation-client

[82-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[82-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-82]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[83-version-negotiation]
ssl_conf = 83-version-negotiation-ssl

[83-version-negotiation-ssl]
server = 83-version-negotiation-server
client = 83-version-negotiation-client

[83-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[83-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-83]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[84-version-negotiation]
ssl_conf = 84-version-negotiation-ssl

[84-version-negotiation-ssl]
server = 84-version-negotiation-server
client = 84-version-negotiation-client

[84-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[84-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-84]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[85-version-negotiation]
ssl_conf = 85-version-negotiation-ssl

[85-version-negotiation-ssl]
server = 85-version-negotiation-server
client = 85-version-negotiation-client

[85-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[85-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-85]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[86-version-negotiation]
ssl_conf = 86-version-negotiation-ssl

[86-version-negotiation-ssl]
server = 86-version-negotiation-server
client = 86-version-negotiation-client

[86-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[86-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-86]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[87-version-negotiation]
ssl_conf = 87-version-negotiation-ssl

[87-version-negotiation-ssl]
server = 87-version-negotiation-server
client = 87-version-negotiation-client

[87-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[87-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-87]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[88-version-negotiation]
ssl_conf = 88-version-negotiation-ssl

[88-version-negotiation-ssl]
server = 88-version-negotiation-server
client = 88-version-negotiation-client

[88-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[88-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-88]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[89-version-negotiation]
ssl_conf = 89-version-negotiation-ssl

[89-version-negotiation-ssl]
server = 89-version-negotiation-server
client = 89-version-negotiation-client

[89-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[89-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-89]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[90-version-negotiation]
ssl_conf = 90-version-negotiation-ssl

[90-version-negotiation-ssl]
server = 90-version-negotiation-server
client = 90-version-negotiation-client

[90-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[90-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-90]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[91-version-negotiation]
ssl_conf = 91-version-negotiation-ssl

[91-version-negotiation-ssl]
server = 91-version-negotiation-server
client = 91-version-negotiation-client

[91-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[91-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-91]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[92-version-negotiation]
ssl_conf = 92-version-negotiation-ssl

[92-version-negotiation-ssl]
server = 92-version-negotiation-server
client = 92-version-negotiation-client

[92-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[92-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-92]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[93-version-negotiation]
ssl_conf = 93-version-negotiation-ssl

[93-version-negotiation-ssl]
server = 93-version-negotiation-server
client = 93-version-negotiation-client

[93-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[93-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-93]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[94-version-negotiation]
ssl_conf = 94-version-negotiation-ssl

[94-version-negotiation-ssl]
server = 94-version-negotiation-server
client = 94-version-negotiation-client

[94-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[94-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-94]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[95-version-negotiation]
ssl_conf = 95-version-negotiation-ssl

[95-version-negotiation-ssl]
server = 95-version-negotiation-server
client = 95-version-negotiation-client

[95-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[95-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-95]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[96-version-negotiation]
ssl_conf = 96-version-negotiation-ssl

[96-version-negotiation-ssl]
server = 96-version-negotiation-server
client = 96-version-negotiation-client

[96-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[96-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-96]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[97-version-negotiation]
ssl_conf = 97-version-negotiation-ssl

[97-version-negotiation-ssl]
server = 97-version-negotiation-server
client = 97-version-negotiation-client

[97-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[97-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-97]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[98-version-negotiation]
ssl_conf = 98-version-negotiation-ssl

[98-version-negotiation-ssl]
server = 98-version-negotiation-server
client = 98-version-negotiation-client

[98-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[98-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-98]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[99-version-negotiation]
ssl_conf = 99-version-negotiation-ssl

[99-version-negotiation-ssl]
server = 99-version-negotiation-server
client = 99-version-negotiation-client

[99-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[99-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-99]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[100-version-negotiation]
ssl_conf = 100-version-negotiation-ssl

[100-version-negotiation-ssl]
server = 100-version-negotiation-server
client = 100-version-negotiation-client

[100-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[100-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-100]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[101-version-negotiation]
ssl_conf = 101-version-negotiation-ssl

[101-version-negotiation-ssl]
server = 101-version-negotiation-server
client = 101-version-negotiation-client

[101-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[101-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-101]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[102-version-negotiation]
ssl_conf = 102-version-negotiation-ssl

[102-version-negotiation-ssl]
server = 102-version-negotiation-server
client = 102-version-negotiation-client

[102-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[102-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-102]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[103-version-negotiation]
ssl_conf = 103-version-negotiation-ssl

[103-version-negotiation-ssl]
server = 103-version-negotiation-server
client = 103-version-negotiation-client

[103-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[103-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-103]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[104-version-negotiation]
ssl_conf = 104-version-negotiation-ssl

[104-version-negotiation-ssl]
server = 104-version-negotiation-server
client = 104-version-negotiation-client

[104-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[104-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-104]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[105-version-negotiation]
ssl_conf = 105-version-negotiation-ssl

[105-version-negotiation-ssl]
server = 105-version-negotiation-server
client = 105-version-negotiation-client

[105-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[105-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-105]
ExpectedResult = ServerFail


# ===========================================================

[106-version-negotiation]
ssl_conf = 106-version-negotiation-ssl

[106-version-negotiation-ssl]
server = 106-version-negotiation-server
client = 106-version-negotiation-client

[106-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[106-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-106]
ExpectedResult = ServerFail


# ===========================================================

[107-version-negotiation]
ssl_conf = 107-version-negotiation-ssl

[107-version-negotiation-ssl]
server = 107-version-negotiation-server
client = 107-version-negotiation-client

[107-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[107-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-107]
ExpectedResult = ServerFail


# ===========================================================

[108-version-negotiation]
ssl_conf = 108-version-negotiation-ssl

[108-version-negotiation-ssl]
server = 108-version-negotiation-server
client = 108-version-negotiation-client

[108-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[108-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-108]
ExpectedResult = ServerFail


# ===========================================================

[109-version-negotiation]
ssl_conf = 109-version-negotiation-ssl

[109-version-negotiation-ssl]
server = 109-version-negotiation-server
client = 109-version-negotiation-client

[109-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[109-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-109]
ExpectedResult = ServerFail


# ===========================================================

[110-version-negotiation]
ssl_conf = 110-version-negotiation-ssl

[110-version-negotiation-ssl]
server = 110-version-negotiation-server
client = 110-version-negotiation-client

[110-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[110-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-110]
ExpectedResult = ServerFail


# ===========================================================

[111-version-negotiation]
ssl_conf = 111-version-negotiation-ssl

[111-version-negotiation-ssl]
server = 111-version-negotiation-server
client = 111-version-negotiation-client

[111-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[111-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-111]
ExpectedResult = ServerFail


# ===========================================================

[112-version-negotiation]
ssl_conf = 112-version-negotiation-ssl

[112-version-negotiation-ssl]
server = 112-version-negotiation-server
client = 112-version-negotiation-client

[112-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[112-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-112]
ExpectedResult = ServerFail


# ===========================================================

[113-version-negotiation]
ssl_conf = 113-version-negotiation-ssl

[113-version-negotiation-ssl]
server = 113-version-negotiation-server
client = 113-version-negotiation-client

[113-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[113-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-113]
ExpectedResult = ServerFail


# ===========================================================

[114-version-negotiation]
ssl_conf = 114-version-negotiation-ssl

[114-version-negotiation-ssl]
server = 114-version-negotiation-server
client = 114-version-negotiation-client

[114-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[114-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-114]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[115-version-negotiation]
ssl_conf = 115-version-negotiation-ssl

[115-version-negotiation-ssl]
server = 115-version-negotiation-server
client = 115-version-negotiation-client

[115-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[115-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-115]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[116-version-negotiation]
ssl_conf = 116-version-negotiation-ssl

[116-version-negotiation-ssl]
server = 116-version-negotiation-server
client = 116-version-negotiation-client

[116-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[116-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-116]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[117-version-negotiation]
ssl_conf = 117-version-negotiation-ssl

[117-version-negotiation-ssl]
server = 117-version-negotiation-server
client = 117-version-negotiation-client

[117-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[117-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-117]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[118-version-negotiation]
ssl_conf = 118-version-negotiation-ssl

[118-version-negotiation-ssl]
server = 118-version-negotiation-server
client = 118-version-negotiation-client

[118-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[118-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-118]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[119-version-negotiation]
ssl_conf = 119-version-negotiation-ssl

[119-version-negotiation-ssl]
server = 119-version-negotiation-server
client = 119-version-negotiation-client

[119-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[119-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-119]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[120-version-negotiation]
ssl_conf = 120-version-negotiation-ssl

[120-version-negotiation-ssl]
server = 120-version-negotiation-server
client = 120-version-negotiation-client

[120-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[120-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-120]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[121-version-negotiation]
ssl_conf = 121-version-negotiation-ssl

[121-version-negotiation-ssl]
server = 121-version-negotiation-server
client = 121-version-negotiation-client

[121-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[121-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-121]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[122-version-negotiation]
ssl_conf = 122-version-negotiation-ssl

[122-version-negotiation-ssl]
server = 122-version-negotiation-server
client = 122-version-negotiation-client

[122-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[122-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-122]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[123-version-negotiation]
ssl_conf = 123-version-negotiation-ssl

[123-version-negotiation-ssl]
server = 123-version-negotiation-server
client = 123-version-negotiation-client

[123-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[123-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-123]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[124-version-negotiation]
ssl_conf = 124-version-negotiation-ssl

[124-version-negotiation-ssl]
server = 124-version-negotiation-server
client = 124-version-negotiation-client

[124-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[124-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-124]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[125-version-negotiation]
ssl_conf = 125-version-negotiation-ssl

[125-version-negotiation-ssl]
server = 125-version-negotiation-server
client = 125-version-negotiation-client

[125-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[125-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-125]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[126-version-negotiation]
ssl_conf = 126-version-negotiation-ssl

[126-version-negotiation-ssl]
server = 126-version-negotiation-server
client = 126-version-negotiation-client

[126-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[126-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-126]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[127-version-negotiation]
ssl_conf = 127-version-negotiation-ssl

[127-version-negotiation-ssl]
server = 127-version-negotiation-server
client = 127-version-negotiation-client

[127-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[127-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-127]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[128-version-negotiation]
ssl_conf = 128-version-negotiation-ssl

[128-version-negotiation-ssl]
server = 128-version-negotiation-server
client = 128-version-negotiation-client

[128-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[128-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-128]
ExpectedResult = ServerFail


# ===========================================================

[129-version-negotiation]
ssl_conf = 129-version-negotiation-ssl

[129-version-negotiation-ssl]
server = 129-version-negotiation-server
client = 129-version-negotiation-client

[129-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[129-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-129]
ExpectedResult = ServerFail


# ===========================================================

[130-version-negotiation]
ssl_conf = 130-version-negotiation-ssl

[130-version-negotiation-ssl]
server = 130-version-negotiation-server
client = 130-version-negotiation-client

[130-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[130-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-130]
ExpectedResult = ServerFail


# ===========================================================

[131-version-negotiation]
ssl_conf = 131-version-negotiation-ssl

[131-version-negotiation-ssl]
server = 131-version-negotiation-server
client = 131-version-negotiation-client

[131-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[131-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-131]
ExpectedResult = ServerFail


# ===========================================================

[132-version-negotiation]
ssl_conf = 132-version-negotiation-ssl

[132-version-negotiation-ssl]
server = 132-version-negotiation-server
client = 132-version-negotiation-client

[132-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[132-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-132]
ExpectedResult = ServerFail


# ===========================================================

[133-version-negotiation]
ssl_conf = 133-version-negotiation-ssl

[133-version-negotiation-ssl]
server = 133-version-negotiation-server
client = 133-version-negotiation-client

[133-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[133-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-133]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[134-version-negotiation]
ssl_conf = 134-version-negotiation-ssl

[134-version-negotiation-ssl]
server = 134-version-negotiation-server
client = 134-version-negotiation-client

[134-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[134-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-134]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[135-version-negotiation]
ssl_conf = 135-version-negotiation-ssl

[135-version-negotiation-ssl]
server = 135-version-negotiation-server
client = 135-version-negotiation-client

[135-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[135-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-135]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[136-version-negotiation]
ssl_conf = 136-version-negotiation-ssl

[136-version-negotiation-ssl]
server = 136-version-negotiation-server
client = 136-version-negotiation-client

[136-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[136-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-136]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[137-version-negotiation]
ssl_conf = 137-version-negotiation-ssl

[137-version-negotiation-ssl]
server = 137-version-negotiation-server
client = 137-version-negotiation-client

[137-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[137-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-137]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[138-version-negotiation]
ssl_conf = 138-version-negotiation-ssl

[138-version-negotiation-ssl]
server = 138-version-negotiation-server
client = 138-version-negotiation-client

[138-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[138-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-138]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[139-version-negotiation]
ssl_conf = 139-version-negotiation-ssl

[139-version-negotiation-ssl]
server = 139-version-negotiation-server
client = 139-version-negotiation-client

[139-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[139-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-139]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[140-version-negotiation]
ssl_conf = 140-version-negotiation-ssl

[140-version-negotiation-ssl]
server = 140-version-negotiation-server
client = 140-version-negotiation-client

[140-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[140-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-140]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[141-version-negotiation]
ssl_conf = 141-version-negotiation-ssl

[141-version-negotiation-ssl]
server = 141-version-negotiation-server
client = 141-version-negotiation-client

[141-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[141-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-141]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[142-version-negotiation]
ssl_conf = 142-version-negotiation-ssl

[142-version-negotiation-ssl]
server = 142-version-negotiation-server
client = 142-version-negotiation-client

[142-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[142-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-142]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[143-version-negotiation]
ssl_conf = 143-version-negotiation-ssl

[143-version-negotiation-ssl]
server = 143-version-negotiation-server
client = 143-version-negotiation-client

[143-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[143-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-143]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[144-version-negotiation]
ssl_conf = 144-version-negotiation-ssl

[144-version-negotiation-ssl]
server = 144-version-negotiation-server
client = 144-version-negotiation-client

[144-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[144-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-144]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[145-version-negotiation]
ssl_conf = 145-version-negotiation-ssl

[145-version-negotiation-ssl]
server = 145-version-negotiation-server
client = 145-version-negotiation-client

[145-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[145-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-145]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[146-version-negotiation]
ssl_conf = 146-version-negotiation-ssl

[146-version-negotiation-ssl]
server = 146-version-negotiation-server
client = 146-version-negotiation-client

[146-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[146-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-146]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[147-version-negotiation]
ssl_conf = 147-version-negotiation-ssl

[147-version-negotiation-ssl]
server = 147-version-negotiation-server
client = 147-version-negotiation-client

[147-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[147-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-147]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[148-version-negotiation]
ssl_conf = 148-version-negotiation-ssl

[148-version-negotiation-ssl]
server = 148-version-negotiation-server
client = 148-version-negotiation-client

[148-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[148-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-148]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[149-version-negotiation]
ssl_conf = 149-version-negotiation-ssl

[149-version-negotiation-ssl]
server = 149-version-negotiation-server
client = 149-version-negotiation-client

[149-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[149-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-149]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[150-version-negotiation]
ssl_conf = 150-version-negotiation-ssl

[150-version-negotiation-ssl]
server = 150-version-negotiation-server
client = 150-version-negotiation-client

[150-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[150-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-150]
ExpectedResult = ServerFail


# ===========================================================

[151-version-negotiation]
ssl_conf = 151-version-negotiation-ssl

[151-version-negotiation-ssl]
server = 151-version-negotiation-server
client = 151-version-negotiation-client

[151-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[151-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-151]
ExpectedResult = ServerFail


# ===========================================================

[152-version-negotiation]
ssl_conf = 152-version-negotiation-ssl

[152-version-negotiation-ssl]
server = 152-version-negotiation-server
client = 152-version-negotiation-client

[152-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[152-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-152]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[153-version-negotiation]
ssl_conf = 153-version-negotiation-ssl

[153-version-negotiation-ssl]
server = 153-version-negotiation-server
client = 153-version-negotiation-client

[153-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[153-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-153]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[154-version-negotiation]
ssl_conf = 154-version-negotiation-ssl

[154-version-negotiation-ssl]
server = 154-version-negotiation-server
client = 154-version-negotiation-client

[154-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[154-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-154]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[155-version-negotiation]
ssl_conf = 155-version-negotiation-ssl

[155-version-negotiation-ssl]
server = 155-version-negotiation-server
client = 155-version-negotiation-client

[155-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[155-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-155]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[156-version-negotiation]
ssl_conf = 156-version-negotiation-ssl

[156-version-negotiation-ssl]
server = 156-version-negotiation-server
client = 156-version-negotiation-client

[156-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[156-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-156]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[157-version-negotiation]
ssl_conf = 157-version-negotiation-ssl

[157-version-negotiation-ssl]
server = 157-version-negotiation-server
client = 157-version-negotiation-client

[157-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[157-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-157]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[158-version-negotiation]
ssl_conf = 158-version-negotiation-ssl

[158-version-negotiation-ssl]
server = 158-version-negotiation-server
client = 158-version-negotiation-client

[158-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[158-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-158]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[159-version-negotiation]
ssl_conf = 159-version-negotiation-ssl

[159-version-negotiation-ssl]
server = 159-version-negotiation-server
client = 159-version-negotiation-client

[159-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[159-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-159]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[160-version-negotiation]
ssl_conf = 160-version-negotiation-ssl

[160-version-negotiation-ssl]
server = 160-version-negotiation-server
client = 160-version-negotiation-client

[160-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[160-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-160]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[161-version-negotiation]
ssl_conf = 161-version-negotiation-ssl

[161-version-negotiation-ssl]
server = 161-version-negotiation-server
client = 161-version-negotiation-client

[161-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[161-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-161]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[162-version-negotiation]
ssl_conf = 162-version-negotiation-ssl

[162-version-negotiation-ssl]
server = 162-version-negotiation-server
client = 162-version-negotiation-client

[162-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[162-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-162]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[163-version-negotiation]
ssl_conf = 163-version-negotiation-ssl

[163-version-negotiation-ssl]
server = 163-version-negotiation-server
client = 163-version-negotiation-client

[163-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[163-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-163]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[164-version-negotiation]
ssl_conf = 164-version-negotiation-ssl

[164-version-negotiation-ssl]
server = 164-version-negotiation-server
client = 164-version-negotiation-client

[164-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[164-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-164]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[165-version-negotiation]
ssl_conf = 165-version-negotiation-ssl

[165-version-negotiation-ssl]
server = 165-version-negotiation-server
client = 165-version-negotiation-client

[165-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[165-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-165]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[166-version-negotiation]
ssl_conf = 166-version-negotiation-ssl

[166-version-negotiation-ssl]
server = 166-version-negotiation-server
client = 166-version-negotiation-client

[166-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[166-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-166]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[167-version-negotiation]
ssl_conf = 167-version-negotiation-ssl

[167-version-negotiation-ssl]
server = 167-version-negotiation-server
client = 167-version-negotiation-client

[167-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[167-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-167]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[168-version-negotiation]
ssl_conf = 168-version-negotiation-ssl

[168-version-negotiation-ssl]
server = 168-version-negotiation-server
client = 168-version-negotiation-client

[168-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[168-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-168]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[169-version-negotiation]
ssl_conf = 169-version-negotiation-ssl

[169-version-negotiation-ssl]
server = 169-version-negotiation-server
client = 169-version-negotiation-client

[169-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[169-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-169]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[170-version-negotiation]
ssl_conf = 170-version-negotiation-ssl

[170-version-negotiation-ssl]
server = 170-version-negotiation-server
client = 170-version-negotiation-client

[170-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[170-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-170]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[171-version-negotiation]
ssl_conf = 171-version-negotiation-ssl

[171-version-negotiation-ssl]
server = 171-version-negotiation-server
client = 171-version-negotiation-client

[171-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[171-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-171]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[172-version-negotiation]
ssl_conf = 172-version-negotiation-ssl

[172-version-negotiation-ssl]
server = 172-version-negotiation-server
client = 172-version-negotiation-client

[172-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[172-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-172]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[173-version-negotiation]
ssl_conf = 173-version-negotiation-ssl

[173-version-negotiation-ssl]
server = 173-version-negotiation-server
client = 173-version-negotiation-client

[173-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[173-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-173]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[174-version-negotiation]
ssl_conf = 174-version-negotiation-ssl

[174-version-negotiation-ssl]
server = 174-version-negotiation-server
client = 174-version-negotiation-client

[174-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[174-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-174]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[175-version-negotiation]
ssl_conf = 175-version-negotiation-ssl

[175-version-negotiation-ssl]
server = 175-version-negotiation-server
client = 175-version-negotiation-client

[175-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[175-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-175]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[176-version-negotiation]
ssl_conf = 176-version-negotiation-ssl

[176-version-negotiation-ssl]
server = 176-version-negotiation-server
client = 176-version-negotiation-client

[176-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[176-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-176]
ExpectedProtocol = TLSv1
ExpectedResult = Success


# ===========================================================

[177-version-negotiation]
ssl_conf = 177-version-negotiation-ssl

[177-version-negotiation-ssl]
server = 177-version-negotiation-server
client = 177-version-negotiation-client

[177-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[177-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-177]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[178-version-negotiation]
ssl_conf = 178-version-negotiation-ssl

[178-version-negotiation-ssl]
server = 178-version-negotiation-server
client = 178-version-negotiation-client

[178-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[178-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-178]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[179-version-negotiation]
ssl_conf = 179-version-negotiation-ssl

[179-version-negotiation-ssl]
server = 179-version-negotiation-server
client = 179-version-negotiation-client

[179-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[179-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-179]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[180-version-negotiation]
ssl_conf = 180-version-negotiation-ssl

[180-version-negotiation-ssl]
server = 180-version-negotiation-server
client = 180-version-negotiation-client

[180-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[180-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-180]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[181-version-negotiation]
ssl_conf = 181-version-negotiation-ssl

[181-version-negotiation-ssl]
server = 181-version-negotiation-server
client = 181-version-negotiation-client

[181-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[181-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-181]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[182-version-negotiation]
ssl_conf = 182-version-negotiation-ssl

[182-version-negotiation-ssl]
server = 182-version-negotiation-server
client = 182-version-negotiation-client

[182-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[182-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-182]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[183-version-negotiation]
ssl_conf = 183-version-negotiation-ssl

[183-version-negotiation-ssl]
server = 183-version-negotiation-server
client = 183-version-negotiation-client

[183-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[183-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-183]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[184-version-negotiation]
ssl_conf = 184-version-negotiation-ssl

[184-version-negotiation-ssl]
server = 184-version-negotiation-server
client = 184-version-negotiation-client

[184-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[184-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-184]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[185-version-negotiation]
ssl_conf = 185-version-negotiation-ssl

[185-version-negotiation-ssl]
server = 185-version-negotiation-server
client = 185-version-negotiation-client

[185-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[185-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-185]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[186-version-negotiation]
ssl_conf = 186-version-negotiation-ssl

[186-version-negotiation-ssl]
server = 186-version-negotiation-server
client = 186-version-negotiation-client

[186-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[186-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-186]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[187-version-negotiation]
ssl_conf = 187-version-negotiation-ssl

[187-version-negotiation-ssl]
server = 187-version-negotiation-server
client = 187-version-negotiation-client

[187-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[187-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-187]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[188-version-negotiation]
ssl_conf = 188-version-negotiation-ssl

[188-version-negotiation-ssl]
server = 188-version-negotiation-server
client = 188-version-negotiation-client

[188-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[188-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-188]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[189-version-negotiation]
ssl_conf = 189-version-negotiation-ssl

[189-version-negotiation-ssl]
server = 189-version-negotiation-server
client = 189-version-negotiation-client

[189-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[189-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-189]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[190-version-negotiation]
ssl_conf = 190-version-negotiation-ssl

[190-version-negotiation-ssl]
server = 190-version-negotiation-server
client = 190-version-negotiation-client

[190-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[190-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-190]
ExpectedResult = ClientFail


# ===========================================================

[191-version-negotiation]
ssl_conf = 191-version-negotiation-ssl

[191-version-negotiation-ssl]
server = 191-version-negotiation-server
client = 191-version-negotiation-client

[191-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[191-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-191]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[192-version-negotiation]
ssl_conf = 192-version-negotiation-ssl

[192-version-negotiation-ssl]
server = 192-version-negotiation-server
client = 192-version-negotiation-client

[192-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[192-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-192]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[193-version-negotiation]
ssl_conf = 193-version-negotiation-ssl

[193-version-negotiation-ssl]
server = 193-version-negotiation-server
client = 193-version-negotiation-client

[193-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[193-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-193]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[194-version-negotiation]
ssl_conf = 194-version-negotiation-ssl

[194-version-negotiation-ssl]
server = 194-version-negotiation-server
client = 194-version-negotiation-client

[194-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[194-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-194]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[195-version-negotiation]
ssl_conf = 195-version-negotiation-ssl

[195-version-negotiation-ssl]
server = 195-version-negotiation-server
client = 195-version-negotiation-client

[195-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[195-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-195]
ExpectedResult = ClientFail


# ===========================================================

[196-version-negotiation]
ssl_conf = 196-version-negotiation-ssl

[196-version-negotiation-ssl]
server = 196-version-negotiation-server
client = 196-version-negotiation-client

[196-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[196-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-196]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[197-version-negotiation]
ssl_conf = 197-version-negotiation-ssl

[197-version-negotiation-ssl]
server = 197-version-negotiation-server
client = 197-version-negotiation-client

[197-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[197-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-197]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[198-version-negotiation]
ssl_conf = 198-version-negotiation-ssl

[198-version-negotiation-ssl]
server = 198-version-negotiation-server
client = 198-version-negotiation-client

[198-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[198-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-198]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[199-version-negotiation]
ssl_conf = 199-version-negotiation-ssl

[199-version-negotiation-ssl]
server = 199-version-negotiation-server
client = 199-version-negotiation-client

[199-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[199-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-199]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[200-version-negotiation]
ssl_conf = 200-version-negotiation-ssl

[200-version-negotiation-ssl]
server = 200-version-negotiation-server
client = 200-version-negotiation-client

[200-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[200-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-200]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[201-version-negotiation]
ssl_conf = 201-version-negotiation-ssl

[201-version-negotiation-ssl]
server = 201-version-negotiation-server
client = 201-version-negotiation-client

[201-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[201-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-201]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[202-version-negotiation]
ssl_conf = 202-version-negotiation-ssl

[202-version-negotiation-ssl]
server = 202-version-negotiation-server
client = 202-version-negotiation-client

[202-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[202-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-202]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[203-version-negotiation]
ssl_conf = 203-version-negotiation-ssl

[203-version-negotiation-ssl]
server = 203-version-negotiation-server
client = 203-version-negotiation-client

[203-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[203-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-203]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[204-version-negotiation]
ssl_conf = 204-version-negotiation-ssl

[204-version-negotiation-ssl]
server = 204-version-negotiation-server
client = 204-version-negotiation-client

[204-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[204-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-204]
ExpectedResult = ServerFail


# ===========================================================

[205-version-negotiation]
ssl_conf = 205-version-negotiation-ssl

[205-version-negotiation-ssl]
server = 205-version-negotiation-server
client = 205-version-negotiation-client

[205-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[205-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-205]
ExpectedResult = ServerFail


# ===========================================================

[206-version-negotiation]
ssl_conf = 206-version-negotiation-ssl

[206-version-negotiation-ssl]
server = 206-version-negotiation-server
client = 206-version-negotiation-client

[206-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[206-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-206]
ExpectedResult = ServerFail


# ===========================================================

[207-version-negotiation]
ssl_conf = 207-version-negotiation-ssl

[207-version-negotiation-ssl]
server = 207-version-negotiation-server
client = 207-version-negotiation-client

[207-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[207-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-207]
ExpectedResult = ServerFail


# ===========================================================

[208-version-negotiation]
ssl_conf = 208-version-negotiation-ssl

[208-version-negotiation-ssl]
server = 208-version-negotiation-server
client = 208-version-negotiation-client

[208-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[208-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-208]
ExpectedResult = ServerFail


# ===========================================================

[209-version-negotiation]
ssl_conf = 209-version-negotiation-ssl

[209-version-negotiation-ssl]
server = 209-version-negotiation-server
client = 209-version-negotiation-client

[209-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[209-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-209]
ExpectedResult = ClientFail


# ===========================================================

[210-version-negotiation]
ssl_conf = 210-version-negotiation-ssl

[210-version-negotiation-ssl]
server = 210-version-negotiation-server
client = 210-version-negotiation-client

[210-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[210-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-210]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[211-version-negotiation]
ssl_conf = 211-version-negotiation-ssl

[211-version-negotiation-ssl]
server = 211-version-negotiation-server
client = 211-version-negotiation-client

[211-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[211-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-211]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[212-version-negotiation]
ssl_conf = 212-version-negotiation-ssl

[212-version-negotiation-ssl]
server = 212-version-negotiation-server
client = 212-version-negotiation-client

[212-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[212-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-212]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[213-version-negotiation]
ssl_conf = 213-version-negotiation-ssl

[213-version-negotiation-ssl]
server = 213-version-negotiation-server
client = 213-version-negotiation-client

[213-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[213-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-213]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[214-version-negotiation]
ssl_conf = 214-version-negotiation-ssl

[214-version-negotiation-ssl]
server = 214-version-negotiation-server
client = 214-version-negotiation-client

[214-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[214-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-214]
ExpectedResult = ClientFail


# ===========================================================

[215-version-negotiation]
ssl_conf = 215-version-negotiation-ssl

[215-version-negotiation-ssl]
server = 215-version-negotiation-server
client = 215-version-negotiation-client

[215-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[215-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-215]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[216-version-negotiation]
ssl_conf = 216-version-negotiation-ssl

[216-version-negotiation-ssl]
server = 216-version-negotiation-server
client = 216-version-negotiation-client

[216-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[216-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-216]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[217-version-negotiation]
ssl_conf = 217-version-negotiation-ssl

[217-version-negotiation-ssl]
server = 217-version-negotiation-server
client = 217-version-negotiation-client

[217-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[217-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-217]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[218-version-negotiation]
ssl_conf = 218-version-negotiation-ssl

[218-version-negotiation-ssl]
server = 218-version-negotiation-server
client = 218-version-negotiation-client

[218-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[218-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-218]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[219-version-negotiation]
ssl_conf = 219-version-negotiation-ssl

[219-version-negotiation-ssl]
server = 219-version-negotiation-server
client = 219-version-negotiation-client

[219-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[219-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-219]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[220-version-negotiation]
ssl_conf = 220-version-negotiation-ssl

[220-version-negotiation-ssl]
server = 220-version-negotiation-server
client = 220-version-negotiation-client

[220-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[220-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-220]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[221-version-negotiation]
ssl_conf = 221-version-negotiation-ssl

[221-version-negotiation-ssl]
server = 221-version-negotiation-server
client = 221-version-negotiation-client

[221-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[221-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-221]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[222-version-negotiation]
ssl_conf = 222-version-negotiation-ssl

[222-version-negotiation-ssl]
server = 222-version-negotiation-server
client = 222-version-negotiation-client

[222-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[222-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-222]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[223-version-negotiation]
ssl_conf = 223-version-negotiation-ssl

[223-version-negotiation-ssl]
server = 223-version-negotiation-server
client = 223-version-negotiation-client

[223-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[223-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-223]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[224-version-negotiation]
ssl_conf = 224-version-negotiation-ssl

[224-version-negotiation-ssl]
server = 224-version-negotiation-server
client = 224-version-negotiation-client

[224-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[224-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-224]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[225-version-negotiation]
ssl_conf = 225-version-negotiation-ssl

[225-version-negotiation-ssl]
server = 225-version-negotiation-server
client = 225-version-negotiation-client

[225-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[225-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-225]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[226-version-negotiation]
ssl_conf = 226-version-negotiation-ssl

[226-version-negotiation-ssl]
server = 226-version-negotiation-server
client = 226-version-negotiation-client

[226-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[226-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-226]
ExpectedResult = ServerFail


# ===========================================================

[227-version-negotiation]
ssl_conf = 227-version-negotiation-ssl

[227-version-negotiation-ssl]
server = 227-version-negotiation-server
client = 227-version-negotiation-client

[227-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[227-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-227]
ExpectedResult = ServerFail


# ===========================================================

[228-version-negotiation]
ssl_conf = 228-version-negotiation-ssl

[228-version-negotiation-ssl]
server = 228-version-negotiation-server
client = 228-version-negotiation-client

[228-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[228-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-228]
ExpectedResult = ServerFail


# ===========================================================

[229-version-negotiation]
ssl_conf = 229-version-negotiation-ssl

[229-version-negotiation-ssl]
server = 229-version-negotiation-server
client = 229-version-negotiation-client

[229-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[229-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-229]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[230-version-negotiation]
ssl_conf = 230-version-negotiation-ssl

[230-version-negotiation-ssl]
server = 230-version-negotiation-server
client = 230-version-negotiation-client

[230-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[230-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-230]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[231-version-negotiation]
ssl_conf = 231-version-negotiation-ssl

[231-version-negotiation-ssl]
server = 231-version-negotiation-server
client = 231-version-negotiation-client

[231-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[231-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-231]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[232-version-negotiation]
ssl_conf = 232-version-negotiation-ssl

[232-version-negotiation-ssl]
server = 232-version-negotiation-server
client = 232-version-negotiation-client

[232-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[232-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-232]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[233-version-negotiation]
ssl_conf = 233-version-negotiation-ssl

[233-version-negotiation-ssl]
server = 233-version-negotiation-server
client = 233-version-negotiation-client

[233-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[233-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-233]
ExpectedResult = ServerFail


# ===========================================================

[234-version-negotiation]
ssl_conf = 234-version-negotiation-ssl

[234-version-negotiation-ssl]
server = 234-version-negotiation-server
client = 234-version-negotiation-client

[234-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[234-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-234]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[235-version-negotiation]
ssl_conf = 235-version-negotiation-ssl

[235-version-negotiation-ssl]
server = 235-version-negotiation-server
client = 235-version-negotiation-client

[235-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[235-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-235]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[236-version-negotiation]
ssl_conf = 236-version-negotiation-ssl

[236-version-negotiation-ssl]
server = 236-version-negotiation-server
client = 236-version-negotiation-client

[236-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[236-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-236]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[237-version-negotiation]
ssl_conf = 237-version-negotiation-ssl

[237-version-negotiation-ssl]
server = 237-version-negotiation-server
client = 237-version-negotiation-client

[237-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[237-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-237]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[238-version-negotiation]
ssl_conf = 238-version-negotiation-ssl

[238-version-negotiation-ssl]
server = 238-version-negotiation-server
client = 238-version-negotiation-client

[238-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[238-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-238]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[239-version-negotiation]
ssl_conf = 239-version-negotiation-ssl

[239-version-negotiation-ssl]
server = 239-version-negotiation-server
client = 239-version-negotiation-client

[239-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[239-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-239]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[240-version-negotiation]
ssl_conf = 240-version-negotiation-ssl

[240-version-negotiation-ssl]
server = 240-version-negotiation-server
client = 240-version-negotiation-client

[240-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[240-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-240]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[241-version-negotiation]
ssl_conf = 241-version-negotiation-ssl

[241-version-negotiation-ssl]
server = 241-version-negotiation-server
client = 241-version-negotiation-client

[241-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[241-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-241]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[242-version-negotiation]
ssl_conf = 242-version-negotiation-ssl

[242-version-negotiation-ssl]
server = 242-version-negotiation-server
client = 242-version-negotiation-client

[242-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[242-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-242]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[243-version-negotiation]
ssl_conf = 243-version-negotiation-ssl

[243-version-negotiation-ssl]
server = 243-version-negotiation-server
client = 243-version-negotiation-client

[243-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[243-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-243]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[244-version-negotiation]
ssl_conf = 244-version-negotiation-ssl

[244-version-negotiation-ssl]
server = 244-version-negotiation-server
client = 244-version-negotiation-client

[244-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[244-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-244]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[245-version-negotiation]
ssl_conf = 245-version-negotiation-ssl

[245-version-negotiation-ssl]
server = 245-version-negotiation-server
client = 245-version-negotiation-client

[245-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[245-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-245]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[246-version-negotiation]
ssl_conf = 246-version-negotiation-ssl

[246-version-negotiation-ssl]
server = 246-version-negotiation-server
client = 246-version-negotiation-client

[246-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[246-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-246]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[247-version-negotiation]
ssl_conf = 247-version-negotiation-ssl

[247-version-negotiation-ssl]
server = 247-version-negotiation-server
client = 247-version-negotiation-client

[247-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[247-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-247]
ExpectedResult = ServerFail


# ===========================================================

[248-version-negotiation]
ssl_conf = 248-version-negotiation-ssl

[248-version-negotiation-ssl]
server = 248-version-negotiation-server
client = 248-version-negotiation-client

[248-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[248-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-248]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[249-version-negotiation]
ssl_conf = 249-version-negotiation-ssl

[249-version-negotiation-ssl]
server = 249-version-negotiation-server
client = 249-version-negotiation-client

[249-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[249-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-249]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[250-version-negotiation]
ssl_conf = 250-version-negotiation-ssl

[250-version-negotiation-ssl]
server = 250-version-negotiation-server
client = 250-version-negotiation-client

[250-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[250-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-250]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[251-version-negotiation]
ssl_conf = 251-version-negotiation-ssl

[251-version-negotiation-ssl]
server = 251-version-negotiation-server
client = 251-version-negotiation-client

[251-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[251-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-251]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[252-version-negotiation]
ssl_conf = 252-version-negotiation-ssl

[252-version-negotiation-ssl]
server = 252-version-negotiation-server
client = 252-version-negotiation-client

[252-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[252-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-252]
ExpectedResult = ServerFail


# ===========================================================

[253-version-negotiation]
ssl_conf = 253-version-negotiation-ssl

[253-version-negotiation-ssl]
server = 253-version-negotiation-server
client = 253-version-negotiation-client

[253-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[253-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-253]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[254-version-negotiation]
ssl_conf = 254-version-negotiation-ssl

[254-version-negotiation-ssl]
server = 254-version-negotiation-server
client = 254-version-negotiation-client

[254-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[254-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-254]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[255-version-negotiation]
ssl_conf = 255-version-negotiation-ssl

[255-version-negotiation-ssl]
server = 255-version-negotiation-server
client = 255-version-negotiation-client

[255-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[255-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-255]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[256-version-negotiation]
ssl_conf = 256-version-negotiation-ssl

[256-version-negotiation-ssl]
server = 256-version-negotiation-server
client = 256-version-negotiation-client

[256-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[256-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-256]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[257-version-negotiation]
ssl_conf = 257-version-negotiation-ssl

[257-version-negotiation-ssl]
server = 257-version-negotiation-server
client = 257-version-negotiation-client

[257-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[257-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-257]
ExpectedProtocol = TLSv1.1
ExpectedResult = Success


# ===========================================================

[258-version-negotiation]
ssl_conf = 258-version-negotiation-ssl

[258-version-negotiation-ssl]
server = 258-version-negotiation-server
client = 258-version-negotiation-client

[258-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[258-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-258]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[259-version-negotiation]
ssl_conf = 259-version-negotiation-ssl

[259-version-negotiation-ssl]
server = 259-version-negotiation-server
client = 259-version-negotiation-client

[259-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[259-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-259]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[260-version-negotiation]
ssl_conf = 260-version-negotiation-ssl

[260-version-negotiation-ssl]
server = 260-version-negotiation-server
client = 260-version-negotiation-client

[260-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[260-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-260]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[261-version-negotiation]
ssl_conf = 261-version-negotiation-ssl

[261-version-negotiation-ssl]
server = 261-version-negotiation-server
client = 261-version-negotiation-client

[261-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[261-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-261]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[262-version-negotiation]
ssl_conf = 262-version-negotiation-ssl

[262-version-negotiation-ssl]
server = 262-version-negotiation-server
client = 262-version-negotiation-client

[262-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[262-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-262]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[263-version-negotiation]
ssl_conf = 263-version-negotiation-ssl

[263-version-negotiation-ssl]
server = 263-version-negotiation-server
client = 263-version-negotiation-client

[263-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[263-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-263]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[264-version-negotiation]
ssl_conf = 264-version-negotiation-ssl

[264-version-negotiation-ssl]
server = 264-version-negotiation-server
client = 264-version-negotiation-client

[264-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[264-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-264]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[265-version-negotiation]
ssl_conf = 265-version-negotiation-ssl

[265-version-negotiation-ssl]
server = 265-version-negotiation-server
client = 265-version-negotiation-client

[265-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[265-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-265]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[266-version-negotiation]
ssl_conf = 266-version-negotiation-ssl

[266-version-negotiation-ssl]
server = 266-version-negotiation-server
client = 266-version-negotiation-client

[266-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[266-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-266]
ExpectedResult = ClientFail


# ===========================================================

[267-version-negotiation]
ssl_conf = 267-version-negotiation-ssl

[267-version-negotiation-ssl]
server = 267-version-negotiation-server
client = 267-version-negotiation-client

[267-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[267-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-267]
ExpectedResult = ClientFail


# ===========================================================

[268-version-negotiation]
ssl_conf = 268-version-negotiation-ssl

[268-version-negotiation-ssl]
server = 268-version-negotiation-server
client = 268-version-negotiation-client

[268-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[268-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-268]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[269-version-negotiation]
ssl_conf = 269-version-negotiation-ssl

[269-version-negotiation-ssl]
server = 269-version-negotiation-server
client = 269-version-negotiation-client

[269-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[269-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-269]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[270-version-negotiation]
ssl_conf = 270-version-negotiation-ssl

[270-version-negotiation-ssl]
server = 270-version-negotiation-server
client = 270-version-negotiation-client

[270-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[270-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-270]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[271-version-negotiation]
ssl_conf = 271-version-negotiation-ssl

[271-version-negotiation-ssl]
server = 271-version-negotiation-server
client = 271-version-negotiation-client

[271-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[271-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-271]
ExpectedResult = ClientFail


# ===========================================================

[272-version-negotiation]
ssl_conf = 272-version-negotiation-ssl

[272-version-negotiation-ssl]
server = 272-version-negotiation-server
client = 272-version-negotiation-client

[272-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[272-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-272]
ExpectedResult = ClientFail


# ===========================================================

[273-version-negotiation]
ssl_conf = 273-version-negotiation-ssl

[273-version-negotiation-ssl]
server = 273-version-negotiation-server
client = 273-version-negotiation-client

[273-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[273-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-273]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[274-version-negotiation]
ssl_conf = 274-version-negotiation-ssl

[274-version-negotiation-ssl]
server = 274-version-negotiation-server
client = 274-version-negotiation-client

[274-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[274-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-274]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[275-version-negotiation]
ssl_conf = 275-version-negotiation-ssl

[275-version-negotiation-ssl]
server = 275-version-negotiation-server
client = 275-version-negotiation-client

[275-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[275-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-275]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[276-version-negotiation]
ssl_conf = 276-version-negotiation-ssl

[276-version-negotiation-ssl]
server = 276-version-negotiation-server
client = 276-version-negotiation-client

[276-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[276-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-276]
ExpectedResult = ClientFail


# ===========================================================

[277-version-negotiation]
ssl_conf = 277-version-negotiation-ssl

[277-version-negotiation-ssl]
server = 277-version-negotiation-server
client = 277-version-negotiation-client

[277-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[277-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-277]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[278-version-negotiation]
ssl_conf = 278-version-negotiation-ssl

[278-version-negotiation-ssl]
server = 278-version-negotiation-server
client = 278-version-negotiation-client

[278-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[278-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-278]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[279-version-negotiation]
ssl_conf = 279-version-negotiation-ssl

[279-version-negotiation-ssl]
server = 279-version-negotiation-server
client = 279-version-negotiation-client

[279-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[279-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-279]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[280-version-negotiation]
ssl_conf = 280-version-negotiation-ssl

[280-version-negotiation-ssl]
server = 280-version-negotiation-server
client = 280-version-negotiation-client

[280-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[280-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-280]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[281-version-negotiation]
ssl_conf = 281-version-negotiation-ssl

[281-version-negotiation-ssl]
server = 281-version-negotiation-server
client = 281-version-negotiation-client

[281-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[281-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-281]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[282-version-negotiation]
ssl_conf = 282-version-negotiation-ssl

[282-version-negotiation-ssl]
server = 282-version-negotiation-server
client = 282-version-negotiation-client

[282-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[282-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-282]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[283-version-negotiation]
ssl_conf = 283-version-negotiation-ssl

[283-version-negotiation-ssl]
server = 283-version-negotiation-server
client = 283-version-negotiation-client

[283-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[283-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-283]
ExpectedResult = ServerFail


# ===========================================================

[284-version-negotiation]
ssl_conf = 284-version-negotiation-ssl

[284-version-negotiation-ssl]
server = 284-version-negotiation-server
client = 284-version-negotiation-client

[284-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[284-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-284]
ExpectedResult = ServerFail


# ===========================================================

[285-version-negotiation]
ssl_conf = 285-version-negotiation-ssl

[285-version-negotiation-ssl]
server = 285-version-negotiation-server
client = 285-version-negotiation-client

[285-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[285-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-285]
ExpectedResult = ServerFail


# ===========================================================

[286-version-negotiation]
ssl_conf = 286-version-negotiation-ssl

[286-version-negotiation-ssl]
server = 286-version-negotiation-server
client = 286-version-negotiation-client

[286-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[286-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-286]
ExpectedResult = ServerFail


# ===========================================================

[287-version-negotiation]
ssl_conf = 287-version-negotiation-ssl

[287-version-negotiation-ssl]
server = 287-version-negotiation-server
client = 287-version-negotiation-client

[287-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[287-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-287]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[288-version-negotiation]
ssl_conf = 288-version-negotiation-ssl

[288-version-negotiation-ssl]
server = 288-version-negotiation-server
client = 288-version-negotiation-client

[288-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[288-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-288]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[289-version-negotiation]
ssl_conf = 289-version-negotiation-ssl

[289-version-negotiation-ssl]
server = 289-version-negotiation-server
client = 289-version-negotiation-client

[289-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[289-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-289]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[290-version-negotiation]
ssl_conf = 290-version-negotiation-ssl

[290-version-negotiation-ssl]
server = 290-version-negotiation-server
client = 290-version-negotiation-client

[290-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[290-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-290]
ExpectedResult = ServerFail


# ===========================================================

[291-version-negotiation]
ssl_conf = 291-version-negotiation-ssl

[291-version-negotiation-ssl]
server = 291-version-negotiation-server
client = 291-version-negotiation-client

[291-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[291-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-291]
ExpectedResult = ServerFail


# ===========================================================

[292-version-negotiation]
ssl_conf = 292-version-negotiation-ssl

[292-version-negotiation-ssl]
server = 292-version-negotiation-server
client = 292-version-negotiation-client

[292-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[292-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-292]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[293-version-negotiation]
ssl_conf = 293-version-negotiation-ssl

[293-version-negotiation-ssl]
server = 293-version-negotiation-server
client = 293-version-negotiation-client

[293-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[293-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-293]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[294-version-negotiation]
ssl_conf = 294-version-negotiation-ssl

[294-version-negotiation-ssl]
server = 294-version-negotiation-server
client = 294-version-negotiation-client

[294-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[294-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-294]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[295-version-negotiation]
ssl_conf = 295-version-negotiation-ssl

[295-version-negotiation-ssl]
server = 295-version-negotiation-server
client = 295-version-negotiation-client

[295-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[295-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-295]
ExpectedResult = ServerFail


# ===========================================================

[296-version-negotiation]
ssl_conf = 296-version-negotiation-ssl

[296-version-negotiation-ssl]
server = 296-version-negotiation-server
client = 296-version-negotiation-client

[296-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[296-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-296]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[297-version-negotiation]
ssl_conf = 297-version-negotiation-ssl

[297-version-negotiation-ssl]
server = 297-version-negotiation-server
client = 297-version-negotiation-client

[297-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[297-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-297]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[298-version-negotiation]
ssl_conf = 298-version-negotiation-ssl

[298-version-negotiation-ssl]
server = 298-version-negotiation-server
client = 298-version-negotiation-client

[298-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[298-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-298]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[299-version-negotiation]
ssl_conf = 299-version-negotiation-ssl

[299-version-negotiation-ssl]
server = 299-version-negotiation-server
client = 299-version-negotiation-client

[299-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[299-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-299]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[300-version-negotiation]
ssl_conf = 300-version-negotiation-ssl

[300-version-negotiation-ssl]
server = 300-version-negotiation-server
client = 300-version-negotiation-client

[300-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[300-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-300]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[301-version-negotiation]
ssl_conf = 301-version-negotiation-ssl

[301-version-negotiation-ssl]
server = 301-version-negotiation-server
client = 301-version-negotiation-client

[301-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[301-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-301]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[302-version-negotiation]
ssl_conf = 302-version-negotiation-ssl

[302-version-negotiation-ssl]
server = 302-version-negotiation-server
client = 302-version-negotiation-client

[302-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[302-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-302]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[303-version-negotiation]
ssl_conf = 303-version-negotiation-ssl

[303-version-negotiation-ssl]
server = 303-version-negotiation-server
client = 303-version-negotiation-client

[303-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[303-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-303]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[304-version-negotiation]
ssl_conf = 304-version-negotiation-ssl

[304-version-negotiation-ssl]
server = 304-version-negotiation-server
client = 304-version-negotiation-client

[304-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[304-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-304]
ExpectedResult = ServerFail


# ===========================================================

[305-version-negotiation]
ssl_conf = 305-version-negotiation-ssl

[305-version-negotiation-ssl]
server = 305-version-negotiation-server
client = 305-version-negotiation-client

[305-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[305-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-305]
ExpectedResult = ServerFail


# ===========================================================

[306-version-negotiation]
ssl_conf = 306-version-negotiation-ssl

[306-version-negotiation-ssl]
server = 306-version-negotiation-server
client = 306-version-negotiation-client

[306-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[306-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-306]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[307-version-negotiation]
ssl_conf = 307-version-negotiation-ssl

[307-version-negotiation-ssl]
server = 307-version-negotiation-server
client = 307-version-negotiation-client

[307-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[307-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-307]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[308-version-negotiation]
ssl_conf = 308-version-negotiation-ssl

[308-version-negotiation-ssl]
server = 308-version-negotiation-server
client = 308-version-negotiation-client

[308-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[308-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-308]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[309-version-negotiation]
ssl_conf = 309-version-negotiation-ssl

[309-version-negotiation-ssl]
server = 309-version-negotiation-server
client = 309-version-negotiation-client

[309-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[309-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-309]
ExpectedResult = ServerFail


# ===========================================================

[310-version-negotiation]
ssl_conf = 310-version-negotiation-ssl

[310-version-negotiation-ssl]
server = 310-version-negotiation-server
client = 310-version-negotiation-client

[310-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[310-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-310]
ExpectedResult = ServerFail


# ===========================================================

[311-version-negotiation]
ssl_conf = 311-version-negotiation-ssl

[311-version-negotiation-ssl]
server = 311-version-negotiation-server
client = 311-version-negotiation-client

[311-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[311-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-311]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[312-version-negotiation]
ssl_conf = 312-version-negotiation-ssl

[312-version-negotiation-ssl]
server = 312-version-negotiation-server
client = 312-version-negotiation-client

[312-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[312-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-312]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[313-version-negotiation]
ssl_conf = 313-version-negotiation-ssl

[313-version-negotiation-ssl]
server = 313-version-negotiation-server
client = 313-version-negotiation-client

[313-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[313-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-313]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[314-version-negotiation]
ssl_conf = 314-version-negotiation-ssl

[314-version-negotiation-ssl]
server = 314-version-negotiation-server
client = 314-version-negotiation-client

[314-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[314-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-314]
ExpectedResult = ServerFail


# ===========================================================

[315-version-negotiation]
ssl_conf = 315-version-negotiation-ssl

[315-version-negotiation-ssl]
server = 315-version-negotiation-server
client = 315-version-negotiation-client

[315-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[315-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-315]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[316-version-negotiation]
ssl_conf = 316-version-negotiation-ssl

[316-version-negotiation-ssl]
server = 316-version-negotiation-server
client = 316-version-negotiation-client

[316-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[316-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-316]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[317-version-negotiation]
ssl_conf = 317-version-negotiation-ssl

[317-version-negotiation-ssl]
server = 317-version-negotiation-server
client = 317-version-negotiation-client

[317-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[317-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-317]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[318-version-negotiation]
ssl_conf = 318-version-negotiation-ssl

[318-version-negotiation-ssl]
server = 318-version-negotiation-server
client = 318-version-negotiation-client

[318-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[318-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-318]
ExpectedProtocol = TLSv1.2
ExpectedResult = Success


# ===========================================================

[319-version-negotiation]
ssl_conf = 319-version-negotiation-ssl

[319-version-negotiation-ssl]
server = 319-version-negotiation-server
client = 319-version-negotiation-client

[319-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[319-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-319]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[320-version-negotiation]
ssl_conf = 320-version-negotiation-ssl

[320-version-negotiation-ssl]
server = 320-version-negotiation-server
client = 320-version-negotiation-client

[320-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[320-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-320]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[321-version-negotiation]
ssl_conf = 321-version-negotiation-ssl

[321-version-negotiation-ssl]
server = 321-version-negotiation-server
client = 321-version-negotiation-client

[321-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[321-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-321]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[322-version-negotiation]
ssl_conf = 322-version-negotiation-ssl

[322-version-negotiation-ssl]
server = 322-version-negotiation-server
client = 322-version-negotiation-client

[322-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[322-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-322]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[323-version-negotiation]
ssl_conf = 323-version-negotiation-ssl

[323-version-negotiation-ssl]
server = 323-version-negotiation-server
client = 323-version-negotiation-client

[323-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[323-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-323]
ExpectedResult = ServerFail


# ===========================================================

[324-version-negotiation]
ssl_conf = 324-version-negotiation-ssl

[324-version-negotiation-ssl]
server = 324-version-negotiation-server
client = 324-version-negotiation-client

[324-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[324-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-324]
ExpectedResult = ServerFail


# ===========================================================

[325-version-negotiation]
ssl_conf = 325-version-negotiation-ssl

[325-version-negotiation-ssl]
server = 325-version-negotiation-server
client = 325-version-negotiation-client

[325-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[325-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-325]
ExpectedResult = ServerFail


# ===========================================================

[326-version-negotiation]
ssl_conf = 326-version-negotiation-ssl

[326-version-negotiation-ssl]
server = 326-version-negotiation-server
client = 326-version-negotiation-client

[326-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[326-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-326]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[327-version-negotiation]
ssl_conf = 327-version-negotiation-ssl

[327-version-negotiation-ssl]
server = 327-version-negotiation-server
client = 327-version-negotiation-client

[327-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[327-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-327]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[328-version-negotiation]
ssl_conf = 328-version-negotiation-ssl

[328-version-negotiation-ssl]
server = 328-version-negotiation-server
client = 328-version-negotiation-client

[328-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[328-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-328]
ExpectedResult = ServerFail


# ===========================================================

[329-version-negotiation]
ssl_conf = 329-version-negotiation-ssl

[329-version-negotiation-ssl]
server = 329-version-negotiation-server
client = 329-version-negotiation-client

[329-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[329-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-329]
ExpectedResult = ServerFail


# ===========================================================

[330-version-negotiation]
ssl_conf = 330-version-negotiation-ssl

[330-version-negotiation-ssl]
server = 330-version-negotiation-server
client = 330-version-negotiation-client

[330-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[330-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-330]
ExpectedResult = ServerFail


# ===========================================================

[331-version-negotiation]
ssl_conf = 331-version-negotiation-ssl

[331-version-negotiation-ssl]
server = 331-version-negotiation-server
client = 331-version-negotiation-client

[331-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[331-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-331]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[332-version-negotiation]
ssl_conf = 332-version-negotiation-ssl

[332-version-negotiation-ssl]
server = 332-version-negotiation-server
client = 332-version-negotiation-client

[332-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[332-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-332]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[333-version-negotiation]
ssl_conf = 333-version-negotiation-ssl

[333-version-negotiation-ssl]
server = 333-version-negotiation-server
client = 333-version-negotiation-client

[333-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[333-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-333]
ExpectedResult = ServerFail


# ===========================================================

[334-version-negotiation]
ssl_conf = 334-version-negotiation-ssl

[334-version-negotiation-ssl]
server = 334-version-negotiation-server
client = 334-version-negotiation-client

[334-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[334-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-334]
ExpectedResult = ServerFail


# ===========================================================

[335-version-negotiation]
ssl_conf = 335-version-negotiation-ssl

[335-version-negotiation-ssl]
server = 335-version-negotiation-server
client = 335-version-negotiation-client

[335-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[335-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-335]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[336-version-negotiation]
ssl_conf = 336-version-negotiation-ssl

[336-version-negotiation-ssl]
server = 336-version-negotiation-server
client = 336-version-negotiation-client

[336-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[336-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-336]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[337-version-negotiation]
ssl_conf = 337-version-negotiation-ssl

[337-version-negotiation-ssl]
server = 337-version-negotiation-server
client = 337-version-negotiation-client

[337-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[337-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-337]
ExpectedResult = ServerFail


# ===========================================================

[338-version-negotiation]
ssl_conf = 338-version-negotiation-ssl

[338-version-negotiation-ssl]
server = 338-version-negotiation-server
client = 338-version-negotiation-client

[338-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[338-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-338]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[339-version-negotiation]
ssl_conf = 339-version-negotiation-ssl

[339-version-negotiation-ssl]
server = 339-version-negotiation-server
client = 339-version-negotiation-client

[339-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[339-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-339]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[340-version-negotiation]
ssl_conf = 340-version-negotiation-ssl

[340-version-negotiation-ssl]
server = 340-version-negotiation-server
client = 340-version-negotiation-client

[340-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[340-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-340]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[341-version-negotiation]
ssl_conf = 341-version-negotiation-ssl

[341-version-negotiation-ssl]
server = 341-version-negotiation-server
client = 341-version-negotiation-client

[341-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[341-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-341]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[342-version-negotiation]
ssl_conf = 342-version-negotiation-ssl

[342-version-negotiation-ssl]
server = 342-version-negotiation-server
client = 342-version-negotiation-client

[342-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[342-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-342]
ExpectedResult = ServerFail


# ===========================================================

[343-version-negotiation]
ssl_conf = 343-version-negotiation-ssl

[343-version-negotiation-ssl]
server = 343-version-negotiation-server
client = 343-version-negotiation-client

[343-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[343-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-343]
ExpectedResult = ServerFail


# ===========================================================

[344-version-negotiation]
ssl_conf = 344-version-negotiation-ssl

[344-version-negotiation-ssl]
server = 344-version-negotiation-server
client = 344-version-negotiation-client

[344-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[344-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-344]
ExpectedResult = ServerFail


# ===========================================================

[345-version-negotiation]
ssl_conf = 345-version-negotiation-ssl

[345-version-negotiation-ssl]
server = 345-version-negotiation-server
client = 345-version-negotiation-client

[345-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[345-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-345]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[346-version-negotiation]
ssl_conf = 346-version-negotiation-ssl

[346-version-negotiation-ssl]
server = 346-version-negotiation-server
client = 346-version-negotiation-client

[346-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[346-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-346]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[347-version-negotiation]
ssl_conf = 347-version-negotiation-ssl

[347-version-negotiation-ssl]
server = 347-version-negotiation-server
client = 347-version-negotiation-client

[347-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[347-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-347]
ExpectedResult = ServerFail


# ===========================================================

[348-version-negotiation]
ssl_conf = 348-version-negotiation-ssl

[348-version-negotiation-ssl]
server = 348-version-negotiation-server
client = 348-version-negotiation-client

[348-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[348-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-348]
ExpectedResult = ServerFail


# ===========================================================

[349-version-negotiation]
ssl_conf = 349-version-negotiation-ssl

[349-version-negotiation-ssl]
server = 349-version-negotiation-server
client = 349-version-negotiation-client

[349-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[349-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-349]
ExpectedResult = ServerFail


# ===========================================================

[350-version-negotiation]
ssl_conf = 350-version-negotiation-ssl

[350-version-negotiation-ssl]
server = 350-version-negotiation-server
client = 350-version-negotiation-client

[350-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[350-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-350]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[351-version-negotiation]
ssl_conf = 351-version-negotiation-ssl

[351-version-negotiation-ssl]
server = 351-version-negotiation-server
client = 351-version-negotiation-client

[351-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[351-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-351]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[352-version-negotiation]
ssl_conf = 352-version-negotiation-ssl

[352-version-negotiation-ssl]
server = 352-version-negotiation-server
client = 352-version-negotiation-client

[352-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.1
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[352-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-352]
ExpectedResult = ServerFail


# ===========================================================

[353-version-negotiation]
ssl_conf = 353-version-negotiation-ssl

[353-version-negotiation-ssl]
server = 353-version-negotiation-server
client = 353-version-negotiation-client

[353-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[353-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-353]
ExpectedResult = ServerFail


# ===========================================================

[354-version-negotiation]
ssl_conf = 354-version-negotiation-ssl

[354-version-negotiation-ssl]
server = 354-version-negotiation-server
client = 354-version-negotiation-client

[354-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[354-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-354]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[355-version-negotiation]
ssl_conf = 355-version-negotiation-ssl

[355-version-negotiation-ssl]
server = 355-version-negotiation-server
client = 355-version-negotiation-client

[355-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.1
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[355-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-355]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[356-version-negotiation]
ssl_conf = 356-version-negotiation-ssl

[356-version-negotiation-ssl]
server = 356-version-negotiation-server
client = 356-version-negotiation-client

[356-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[356-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-356]
ExpectedResult = ServerFail


# ===========================================================

[357-version-negotiation]
ssl_conf = 357-version-negotiation-ssl

[357-version-negotiation-ssl]
server = 357-version-negotiation-server
client = 357-version-negotiation-client

[357-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[357-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-357]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[358-version-negotiation]
ssl_conf = 358-version-negotiation-ssl

[358-version-negotiation-ssl]
server = 358-version-negotiation-server
client = 358-version-negotiation-client

[358-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[358-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-358]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[359-version-negotiation]
ssl_conf = 359-version-negotiation-ssl

[359-version-negotiation-ssl]
server = 359-version-negotiation-server
client = 359-version-negotiation-client

[359-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = TLSv1.3
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[359-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-359]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[360-version-negotiation]
ssl_conf = 360-version-negotiation-ssl

[360-version-negotiation-ssl]
server = 360-version-negotiation-server
client = 360-version-negotiation-client

[360-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[360-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = TLSv1.3
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-360]
ExpectedProtocol = TLSv1.3
ExpectedResult = Success


# ===========================================================

[361-ciphersuite-sanity-check-client]
ssl_conf = 361-ciphersuite-sanity-check-client-ssl

[361-ciphersuite-sanity-check-client-ssl]
server = 361-ciphersuite-sanity-check-client-server
client = 361-ciphersuite-sanity-check-client-client

[361-ciphersuite-sanity-check-client-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT
MaxProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[361-ciphersuite-sanity-check-client-client]
CipherString = AES128-SHA
Ciphersuites = 
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-361]
ExpectedResult = ClientFail


# ===========================================================

[362-ciphersuite-sanity-check-server]
ssl_conf = 362-ciphersuite-sanity-check-server-ssl

[362-ciphersuite-sanity-check-server-ssl]
server = 362-ciphersuite-sanity-check-server-server
client = 362-ciphersuite-sanity-check-server-client

[362-ciphersuite-sanity-check-server-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = AES128-SHA
Ciphersuites = 
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[362-ciphersuite-sanity-check-server-client]
CipherString = AES128-SHA
MaxProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-362]
ExpectedResult = ServerFail


