=pod

=head1 NAME

EVP_PKEY-ML-DSA, EVP_KEYMGMT-ML-DSA,
EVP_PKEY-ML-DSA-44, EVP_PKEY-ML-DSA-65, EVP_PKEY-ML-DSA-87
- EVP_PKEY ML-DSA keytype and algorithm support

=head1 DESCRIPTION

ML-DSA implements the algorithms B<ML-DSA-44>, B<ML-DSA-65> and B<ML-DSA-87>. 
The key types B<EVP_PKEY_ML_DSA_44>, B<EVP_PKEY_ML_DSA_65> and
B<EVP_PKEY_ML_DSA_87> are implemented in OpenSSL's default provider.
These implementations support the associated key, containing the public key I<pub>
and the private key I<priv>.

Each of the different key types has an associated security category.
This value is one of 2, 3 or 5 for key types B<ML-DSA-44>, B<ML-DSA-65>
and B<ML-DSA-87> respectively, which correspond to security strengths of
128, 192 and 256 repsectively.

=head2 Keygen Parameters

=over 4

=item "seed" (B<OSSL_PKEY_PARAM_ML_DSA_SEED>) <octet string>

The seed used to generate the private and public key components in a
deterministic manner. This should only be used for testing purposes.
The length of the value supplied must be 32 bytes.
When this value is not supplied the seed is generated randomly using a DRBG. 

=item "properties" (B<OSSL_PKEY_PARAM_PROPERTIES>) <utf8_string>

Sets properties to be used when fetching algorithm implementations used for
ML-DSA hashing operations.

=back

Use EVP_PKEY_CTX_set_params() after calling EVP_PKEY_keygen_init().

=head2 Common ML-DSA parameters

In addition to the common parameters that all keytypes should support (see
L<provider-keymgmt(7)/Common parameters>), the implementation of these key types
support the following.

The following parameters are gettable using EVP_PKEY_get_octet_string_param(),
and settable when using EVP_PKEY_fromdata().

=over 4

=item "pub" (B<OSSL_PKEY_PARAM_PUB_KEY>) <octet string>

The encoded public key value of size 1312, 1952 or 2592 bytes depending on the
respective key type of B<ML-DSA-44>, B<ML-DSA-65> or B<ML-DSA-87>.

=item "priv" (B<OSSL_PKEY_PARAM_PRIV_KEY>) <octet string>

The encoded private key value of size 2560, 4032 or 4896 bytes depending on the
respective key type of B<ML-DSA-44>, B<ML-DSA-65> or B<ML-DSA-87>.

=back

=head1 CONFORMING TO

=over 4

=item FIPS 204

=back

=head1 EXAMPLES

An B<EVP_PKEY> context can be obtained by calling:

    EVP_PKEY_CTX *pctx =
        EVP_PKEY_CTX_new_from_name(NULL, "ML-DSA-44", NULL);

An B<ML-DSA> key can be generated like this:

    pkey = EVP_PKEY_Q_keygen(NULL, NULL, "ML-DSA-44");

The key pair components can be extracted from a key by calling:

    uint8_t priv[3 * 1024], pub[5 * 1024];
    size_t priv_len, pub_len;

    EVP_PKEY_get_octet_string_param(pkey, OSSL_PKEY_PARAM_PRIV_KEY,
                                    priv, sizeof(priv), &priv_len);
    EVP_PKEY_get_octet_string_param(pkey, OSSL_PKEY_PARAM_PUB_KEY,
                                    pub, sizeof(pub), &pub_len));

Similar code can be used for the other key types such as "ML-DSA-87".

=head1 SEE ALSO

L<EVP_KEYMGMT(3)>, L<EVP_PKEY(3)>, L<provider-keymgmt(7)>,
L<EVP_SIGNATURE-ML-DSA(7)>

=head1 HISTORY

This functionality was added in OpenSSL 3.5.

=head1 COPYRIGHT

Copyright 2025 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
