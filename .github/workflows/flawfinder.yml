name: flawfinder

on:
  push:
    branches: ["master", "develop", "release/*"]
  pull_request:
    branches: ["master", "develop", "release/*"]
  schedule:
    - cron: '49 17 * * 3'
jobs:
  flawfinder:
    name: Flawfinder
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Install package repository
        if: matrix.platform.ppa != ''
        run: |
          sudo add-apt-repository ppa:${{ matrix.platform.ppa }}
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get -yq --force-yes install \
              gcc-${{ matrix.platform.arch }} \
              ${{ matrix.platform.libs }}
      - uses: actions/checkout@v4
      - name: Checkout fuzz/corpora submodule
        run: git submodule update --init --depth 1 fuzz/corpora
      - name: Config with FIPS
        if: matrix.platform.fips != 'no'
        run: |
          ./config --banner=Configured --strict-warnings enable-fips \
                   --cross-compile-prefix=${{ matrix.platform.arch }}- \
                   ${{ matrix.platform.target }}
      - name: Config without FIPS
        if: matrix.platform.fips == 'no'
        run: |
          ./config --banner=Configured --strict-warnings \
                   --cross-compile-prefix=${{ matrix.platform.arch }}- \
                   ${{ matrix.platform.target }}
      - name: Config dump
        run: ./configdata.pm --dump
      - name: Make
        run: make -s -j4
      - name: Install qemu
        if: matrix.platform.tests != 'none'
        run: sudo apt-get -yq --force-yes install qemu-user
      - name: Set QEMU environment
        if: matrix.platform.qemucpu != ''
        run: echo "QEMU_CPU=${{ matrix.platform.qemucpu }}" >> $GITHUB_ENV
      - name: Set OpenSSL caps environment
        if: matrix.platform.opensslcapsname != ''
        run: echo "OPENSSL_${{ matrix.platform.opensslcapsname }}=\
                   ${{ matrix.platform.opensslcaps }}" >> $GITHUB_ENV
      - name: Get CPU info
        run: cat /proc/cpuinfo
      - name: Make all tests
        if: github.event_name == 'push' && matrix.platform.tests == ''
        run: |
          .github/workflows/make-test \
                    TESTS="-test_afalg" \
                    QEMU_LD_PREFIX=/usr/${{ matrix.platform.arch }}
      - name: Make some tests
        if: github.event_name == 'push' && matrix.platform.tests != 'none' && matrix.platform.tests != ''
        run: |
          .github/workflows/make-test \
                    TESTS="${{ matrix.platform.tests }} -test_afalg" \
                    QEMU_LD_PREFIX=/usr/${{ matrix.platform.arch }}
      - name: Make evp tests
        if: github.event_name == 'pull_request' && matrix.platform.tests != 'none'
        run: |
          .github/workflows/make-test \
                    TESTS="test_evp*" \
                    QEMU_LD_PREFIX=/usr/${{ matrix.platform.arch }}
      - name: Checkout code
        uses: actions/checkout@v4

      - name: flawfinder_scan
        uses: david-a-wheeler/flawfinder@8e4a779ad59dbfaee5da586aa9210853b701959c
        with:
          arguments: '--sarif ./'
          output: 'flawfinder_results.sarif'

      - name: Upload analysis results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{github.workspace}}/flawfinder_results.sarif
      - name: Checkout code
        uses: actions/checkout@v4

      - name: flawfinder_scan
        uses: david-a-wheeler/flawfinder@8e4a779ad59dbfaee5da586aa9210853b701959c
        with:
          arguments: '--sarif ./'
          output: 'flawfinder_results.sarif'

      - name: Upload analysis results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{github.workspace}}/flawfinder_results.sari
