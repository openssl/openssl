name: Coverage
true:
  schedule:
  - cron: 15 02 * * *
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to measure coverage
        required: true
        default: master
      extra_config:
        description: Extra options for configuration script
        default: ''
permissions:
  contents: read
jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.branches.outputs.branches }}
    steps:
    - name: Define branches
      id: branches
      run: "if [ \"\"$GITHUB_VAR_0\"\" = \"workflow_dispatch\" ]; then\nMATRIX=$(cat\
        \ << EOF\n[{\n  \"branch\": \"\"$GITHUB_VAR_1\"\",\n  \"extra_config\": \"\
        \"$GITHUB_VAR_2\"\"\n}]\nEOF\n)\nelse\nMATRIX=$(cat << EOF\n[{\n    \"branch\"\
        : \"openssl-3.5\",\n    \"extra_config\": \"no-afalgeng enable-fips enable-tfo\"\
        \n  },{\n    \"branch\": \"openssl-3.4\",\n    \"extra_config\": \"no-afalgeng\
        \ enable-fips enable-tfo\"\n  }, {\n    \"branch\": \"openssl-3.3\",\n   \
        \ \"extra_config\": \"no-afalgeng enable-fips enable-tfo\"\n  }, {\n    \"\
        branch\": \"openssl-3.2\",\n    \"extra_config\": \"no-afalgeng enable-fips\
        \ enable-tfo\"\n  }, {\n    \"branch\": \"openssl-3.1\",\n    \"extra_config\"\
        : \"no-afalgeng enable-fips\"\n  }, {\n    \"branch\": \"openssl-3.0\",\n\
        \    \"extra_config\": \"no-afalgeng enable-fips\"\n  }, {\n    \"branch\"\
        : \"master\",\n    \"extra_config\": \"no-afalgeng enable-fips enable-tfo\"\
        \n}]\nEOF\n)\nfi\necho \"branches<<EOF\"$'\\n'\"$MATRIX\"$'\\n'EOF >> \"$GITHUB_OUTPUT\"\
        \n"
      env:
        GITHUB_VAR_0: ${{ github.event_name}}
        GITHUB_VAR_1: ${{ github.event.inputs.branch }}
        GITHUB_VAR_2: ${{ github.event.inputs.extra_config }}
  coverage:
    needs: define-matrix
    permissions:
      checks: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        branches: ${{ fromJSON(needs.define-matrix.outputs.branches) }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ matrix.branches.branch }}
    - name: cache commit id
      run: 'echo "githubid=`/usr/bin/git log -1 --format=''%H''`" >>$GITHUB_ENV

        '
    - name: package installs
      run: 'sudo apt-get update

        sudo apt-get -yq install lcov

        sudo apt-get -yq install bison gettext keyutils ldap-utils libldap2-dev libkeyutils-dev
        python3 python3-paste python3-pyrad slapd tcsh python3-virtualenv virtualenv
        python3-kdcproxy

        '
    - name: install Test2::V0 for gost_engine testing
      uses: perl-actions/install-with-cpanm@stable
      with:
        install: Test2::V0
    - name: setup hostname workaround
      run: sudo hostname localhost
    - name: config
      run: CC=gcc ./config --debug --coverage ${{ matrix.branches.extra_config }}
        no-asm enable-rc5 enable-md2 enable-ssl3 enable-nextprotoneg enable-ssl3-method
        enable-weak-ssl-ciphers enable-zlib enable-ec_nistp_64_gcc_128 enable-buildtest-c++
        enable-ssl-trace enable-trace
    - name: config dump
      run: ./configdata.pm --dump
    - name: make
      run: make -s -j4
    - name: get cpu info
      run: 'cat /proc/cpuinfo

        ./util/opensslwrap.sh version -c

        '
    - name: make test
      run: make test TESTS='-test_external_krb5' EVP_TEST_EXTENDED=1
    - name: generate coverage info
      run: lcov -d . -c --exclude "${PWD}/test/*" --exclude "${PWD}/fuzz/*" --exclude
        "/usr/include/*" --ignore-errors mismatch --branch-coverage -o ./lcov.info
    - name: Coveralls upload
      uses: coverallsapp/github-action@v2.3.2
      with:
        github-token: ${{ secrets.github_token }}
        git-branch: ${{ matrix.branches.branch }}
        git-commit: ${{ env.githubid }}
        path-to-lcov: ./lcov.info
