# Copyright 2021-2025 The OpenSSL Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://www.openssl.org/source/license.html

name: Compiler Zoo CI

on: [push]

permissions:
  contents: read

jobs:
  gcc:
    strategy:
      fail-fast: false
      matrix:
        gcc: [gcc-9, gcc-10, gcc-11, gcc-12, gcc-13, gcc-14]
    runs-on: ubuntu-24.04
    steps:
    - name: install packages
      run: |
        sudo apt-get update
        sudo apt-get -y install ${{ matrix.gcc }}
    - uses: actions/checkout@v5
    - name: checkout fuzz/corpora submodule
      run: git submodule update --init --depth 1 fuzz/corpora
    - name: config
      env:
        CC: ${{ matrix.gcc }}
      run: |
        ./config --strict-warnings --banner=Configured no-shared enable-fips
    - name: config dump
      run: ./configdata.pm --dump
    - name: make
      run: make -s -j
    - name: get cpu info
      run: |
        cat /proc/cpuinfo
        ./util/opensslwrap.sh version -c
    - name: make test
      run: make test HARNESS_JOBS=${HARNESS_JOBS:-4}

  clang:
    strategy:
      fail-fast: false
      matrix:
        clang: [clang-11, clang-12, clang-13, clang-14, clang-15, clang-16, clang-17, clang-18, clang-19, clang-20]
    runs-on: ubuntu-22.04
    steps:
    - name: install packages
      run: |
        set -euo pipefail
        VERSION=$(awk -F- '{print $NF}' <<< ${{ matrix.clang }})
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-$VERSION main" | sudo tee -a /etc/apt/sources.list
        sudo apt-get update || true
        sudo apt-get -y install ${{ matrix.clang }}
    - uses: actions/checkout@v5
    - name: checkout fuzz/corpora submodule
      run: git submodule update --init --depth 1 fuzz/corpora
    - name: config
      env:
        CC: ${{ matrix.clang }}
      run: |
        ./config --strict-warnings --banner=Configured no-shared enable-fips
    - name: config dump
      run: ./configdata.pm --dump
    - name: make
      run: make -s -j
    - name: get cpu info
      run: |
        cat /proc/cpuinfo
        ./util/opensslwrap.sh version -c
    - name: make test
      run: make test HARNESS_JOBS=${HARNESS_JOBS:-4}
